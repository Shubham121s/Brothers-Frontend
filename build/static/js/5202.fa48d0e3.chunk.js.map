{"version":3,"file":"static/js/5202.fa48d0e3.chunk.js","mappings":"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","sources":["view/SuperAdmin/Po/NewPo/store/dataSlice.js","view/SuperAdmin/Po/NewPo/store/index.js","view/SuperAdmin/Po/NewPo/index.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { apiGetAllCustomers } from '../../../../../services/SuperAdmin/Customer/CustomerService'\nimport { apiGetAllProductsWithDrawing } from '../../../../../services/SuperAdmin/Product/IndexService'\nimport { apiNewPoRegister } from '../../../../../services/SuperAdmin/Po/PoService'\nimport { apiGetUniquePONumber } from '../../../../../services/SuperAdmin/Po/PoService'\nimport {\n  apiGetAllNotesWithOutPagination,\n  apiGetAllConditionWithOutPagination\n} from '../../../../../services/SuperAdmin/Po/Note.Service'\n\nexport const getAllCustomers = createAsyncThunk(\n  'new/po/data/customer/all',\n  async () => {\n    try {\n      const response = await apiGetAllCustomers()\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nexport const getAllNotes = createAsyncThunk(\n  'new/po/data/notes/all',\n  async () => {\n    try {\n      const response = await apiGetAllNotesWithOutPagination()\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nexport const getAllCondition = createAsyncThunk(\n  'new/po/data/condition/all',\n  async (data) => {\n    try {\n      const response = await apiGetAllConditionWithOutPagination(data)\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nexport const getAllProductsWithDrawing = createAsyncThunk(\n  'new/po/data/product/all',\n  async () => {\n    try {\n      const response = await apiGetAllProductsWithDrawing()\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nexport const postNewPoRegister = createAsyncThunk(\n  'new/po/data/po/register',\n  async (data) => {\n    try {\n      const response = await apiNewPoRegister(data)\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nexport const getUniquePoNumber = createAsyncThunk(\n  'new/po/data/po/unique/number',\n  async (data) => {\n    try {\n      const response = await apiGetUniquePONumber(data)\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nconst dataSlice = createSlice({\n  name: 'new/po/data',\n  initialState: {\n    loading: {\n      getAllCustomers: false,\n      getUniquePoNumber: false,\n      getAllProductsWithDrawing: false,\n      getAllNotes: false,\n      getAllCondition: false\n    },\n    customers: [],\n    products: [],\n    notes: [],\n    condition: [],\n    number: ''\n  },\n  extraReducers: {\n    // Pending states\n    [getAllCustomers.pending]: (state) => {\n      state.loading.getAllCustomers = true\n    },\n    [getUniquePoNumber.pending]: (state) => {\n      state.loading.getUniquePoNumber = true\n    },\n    [getAllProductsWithDrawing.pending]: (state) => {\n      state.loading.getAllProductsWithDrawing = true\n    },\n    [getAllNotes.pending]: (state) => {\n      state.loading.getAllNotes = true\n    },\n    [getAllCondition.pending]: (state) => {\n      state.loading.getAllCondition = true\n    },\n\n    // Fulfilled states\n    [getAllCustomers.fulfilled]: (state, action) => {\n      state.loading.getAllCustomers = false\n      state.customers = action.payload.data?.data || []\n    },\n    [getUniquePoNumber.fulfilled]: (state, action) => {\n      state.loading.getUniquePoNumber = false\n      state.number = action.payload.data?.data || ''\n    },\n    [postNewPoRegister.fulfilled]: (state) => {},\n    [getAllProductsWithDrawing.fulfilled]: (state, action) => {\n      state.loading.getAllProductsWithDrawing = false\n      state.products = action.payload.data?.data || []\n    },\n    [getAllNotes.fulfilled]: (state, action) => {\n      state.loading.getAllNotes = false\n      state.notes = action.payload.data?.data || []\n    },\n    [getAllCondition.fulfilled]: (state, action) => {\n      state.loading.getAllCondition = false\n      state.condition = action.payload.data?.data || []\n    },\n\n    // Rejected states\n    [getAllCustomers.rejected]: (state) => {\n      state.loading.getAllCustomers = false\n    },\n    [getUniquePoNumber.rejected]: (state) => {\n      state.loading.getUniquePoNumber = false\n    },\n    [getAllProductsWithDrawing.rejected]: (state) => {\n      state.loading.getAllProductsWithDrawing = false\n    },\n    [getAllNotes.rejected]: (state) => {\n      state.loading.getAllNotes = false\n    },\n    [getAllCondition.rejected]: (state) => {\n      state.loading.getAllCondition = false\n    }\n  }\n})\n\nexport default dataSlice.reducer\n","import { combineReducers } from '@reduxjs/toolkit'\nimport data from './dataSlice'\nimport state from './stateSlice'\nconst newPoReducer = combineReducers({\n    data,\n    state\n})\n\nexport default newPoReducer\n","import React, { useEffect, useMemo } from \"react\";\nimport { Toast, Notification } from \"../../../../components/ui\";\nimport { useNavigate } from \"react-router-dom\";\nimport PoForm from \"../PoForm\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { injectReducer } from \"../../../../store\";\nimport newPoReducer from \"./store\";\nimport {\n  getAllCondition,\n  getAllCustomers,\n  getAllNotes,\n  getAllProductsWithDrawing,\n  getUniquePoNumber,\n  postNewPoRegister,\n} from \"./store/dataSlice\";\nimport { Loading } from \"../../../../components/shared\";\n\ninjectReducer(\"new_po\", newPoReducer);\n\nconst NewPO = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const fetch = () => {\n    dispatch(getAllCustomers());\n    dispatch(getAllProductsWithDrawing());\n    dispatch(getUniquePoNumber());\n    dispatch(getAllNotes());\n    dispatch(getAllCondition({ type: \"po\" }));\n  };\n\n  useEffect(() => {\n    fetch();\n  }, []);\n\n  const customers = useSelector((state) => state.new_po.data.customers);\n  const products = useSelector((state) => state.new_po.data.products);\n  const number = useSelector((state) => state.new_po.data.number);\n  const Notes = useSelector((state) => state.new_po.data.notes);\n  const Condition = useSelector((state) => state.new_po.data.condition);\n  const loadingStates = useSelector((state) => state.new_po.data.loading);\n\n  const isLoading = Object.values(loadingStates).some((state) => state);\n\n  const noteOption = useMemo(() => {\n    return Notes?.map((m) => {\n      return { label: m.name, value: { note_id: m.note_id, notes: m.notes } };\n    });\n  }, [Notes]);\n\n  const conditionOption = useMemo(() => {\n    return Condition?.map((m) => {\n      return {\n        label: m.name,\n        value: { condition_id: m.condition_id, condition: m.condition },\n      };\n    });\n  }, [Condition]);\n\n  const addPo = async (data) => {\n    const action = await dispatch(postNewPoRegister(data));\n    return action;\n  };\n\n  const handleFormSubmit = async (values, setSubmitting) => {\n    setSubmitting(true);\n    console.log(values);\n    const action = await addPo({\n      ...values,\n      number: values.number.replace(/\\s+/g, \"\"),\n    });\n    setSubmitting(false);\n    if (action.payload.status === 200) {\n      Toast.push(\n        <Notification\n          title={\"Successfully added\"}\n          type=\"success\"\n          duration={2500}\n        >\n          Po successfully added\n        </Notification>,\n        {\n          placement: \"top-center\",\n        }\n      );\n      handleDiscard();\n    } else {\n      Toast.push(\n        <Notification title={\"Error\"} type=\"danger\" duration={2500}>\n          {action.payload?.data?.message}\n        </Notification>,\n        {\n          placement: \"top-center\",\n        }\n      );\n    }\n  };\n\n  const handleDiscard = () => {\n    navigate(\"/po/list\");\n  };\n\n  return (\n    <Loading loading={isLoading}>\n      <PoForm\n        type=\"new\"\n        onFormSubmit={handleFormSubmit}\n        onDiscard={handleDiscard}\n        customers={customers}\n        products={products}\n        number={number}\n        Notes={noteOption}\n        Condition={conditionOption}\n      />\n    </Loading>\n  );\n};\n\nexport default NewPO;\n"],"names":["getAllCustomers","createAsyncThunk","async","apiGetAllCustomers","error","response","getAllNotes","apiGetAllNotesWithOutPagination","getAllCondition","apiGetAllConditionWithOutPagination","data","getAllProductsWithDrawing","apiGetAllProductsWithDrawing","postNewPoRegister","apiNewPoRegister","getUniquePoNumber","apiGetUniquePONumber","createSlice","name","initialState","loading","customers","products","notes","condition","number","extraReducers","pending","state","fulfilled","action","_action$payload$data","payload","_action$payload$data2","_action$payload$data3","_action$payload$data4","_action$payload$data5","rejected","combineReducers","injectReducer","newPoReducer","NewPO","dispatch","useDispatch","navigate","useNavigate","useEffect","type","useSelector","new_po","Notes","Condition","loadingStates","isLoading","Object","values","some","noteOption","useMemo","map","m","label","value","note_id","conditionOption","condition_id","handleDiscard","_jsx","Loading","children","PoForm","onFormSubmit","setSubmitting","console","log","addPo","replace","_action$payload","status","Toast","push","Notification","title","duration","placement","message","onDiscard"],"sourceRoot":""}