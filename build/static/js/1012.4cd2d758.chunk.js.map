{"version":3,"file":"static/js/1012.4cd2d758.chunk.js","mappings":"gQAGA,MAKA,GALqBA,EAAAA,EAAAA,IAAgB,CACjCC,KAAI,KACJC,MACJ,O,gBCQAC,EAAAA,EAAAA,IAAc,SAAUC,GAExB,MA2EA,EA3EcC,KACZ,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAOjBC,EAAAA,EAAAA,WAAU,KAJRJ,GAASK,EAAAA,EAAAA,OACTL,GAASM,EAAAA,EAAAA,QAKR,IAEH,MAAMC,GAAYC,EAAAA,EAAAA,IAAaZ,GAAUA,EAAMa,OAAOd,KAAKY,WACrDG,GAAaF,EAAAA,EAAAA,IAAaZ,GAAUA,EAAMa,OAAOd,KAAKgB,cACtDC,GAAWJ,EAAAA,EAAAA,IAAaZ,GAAUA,EAAMa,OAAOd,KAAKiB,UA0CpDC,EAAgBA,KACpBX,EAAS,wBAGX,OACEY,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CACLC,KAAK,MACLC,aA3CmBC,MAAOC,EAAQC,KACtCC,QAAQC,IAAIH,GACZC,GAAc,GACd,MAAMG,OARML,gBACSpB,GAAS0B,EAAAA,EAAAA,IAAkB/B,IAO3BgC,CAAMN,GAgBnB,IAADO,EAAAC,GAfPP,GAAc,GACVG,EAAOK,QAAQC,OAAS,MAC1BC,EAAAA,GAAMC,MACJnB,EAAAA,EAAAA,KAACoB,EAAAA,GAAY,CACXC,MAAO,qBACPjB,KAAK,UACLkB,SAAU,KAAKpB,SAChB,sCAGD,CACEqB,UAAW,eAGfxB,KAEAmB,EAAAA,GAAMC,MACJnB,EAAAA,EAAAA,KAACoB,EAAAA,GAAY,CACXC,MAAO,QACPjB,KAAK,SACLkB,SAAU,KAAKpB,SAEA,QAFAY,EAEdH,EAAOK,eAAO,IAAAF,GAAM,QAANC,EAAdD,EAAgBjC,YAAI,IAAAkC,OAAN,EAAdA,EAAsBS,UAEzB,CACED,UAAW,gBAebE,UAAW1B,EACXN,UAAWA,EACXK,SAAUA,EACVF,WAAYA,M","sources":["view/SuperAdmin/PurchaseOrder/NewPo/store/index.js","view/SuperAdmin/PurchaseOrder/NewPo/index.js"],"sourcesContent":["import { combineReducers } from '@reduxjs/toolkit'\nimport data from './dataSlice'\nimport state from './stateSlice'\nconst newPoReducer = combineReducers({\n    data,\n    state\n})\n\nexport default newPoReducer\n","import React, { useEffect } from 'react'\nimport { Toast, Notification } from '../../../../components/ui'\nimport { useNavigate } from 'react-router-dom'\nimport PoForm from '../PoForm'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { injectReducer } from '../../../../store'\nimport newPoReducer from './store'\nimport {\n  getAllCategories,\n  getAllCustomers,\n  getAllProductsWithDrawing,\n  postNewPoRegister\n} from './store/dataSlice'\n\ninjectReducer('new_po', newPoReducer)\n\nconst NewPO = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  const fetch = () => {\n    dispatch(getAllCustomers())\n    dispatch(getAllCategories())\n  }\n\n  useEffect(() => {\n    fetch()\n  }, [])\n\n  const customers = useSelector((state) => state.new_po.data.customers)\n  const categories = useSelector((state) => state.new_po.data.categoryList)\n  const products = useSelector((state) => state.new_po.data.products)\n\n  const addPo = async (data) => {\n    const action = await dispatch(postNewPoRegister(data))\n    return action\n  }\n\n  const handleFormSubmit = async (values, setSubmitting) => {\n    console.log(values)\n    setSubmitting(true)\n    const action = await addPo(values)\n    setSubmitting(false)\n    if (action.payload.status < 300) {\n      Toast.push(\n        <Notification\n          title={'Successfully added'}\n          type=\"success\"\n          duration={2500}\n        >\n          Purchase Order successfully added\n        </Notification>,\n        {\n          placement: 'top-center'\n        }\n      )\n      handleDiscard()\n    } else {\n      Toast.push(\n        <Notification\n          title={'Error'}\n          type=\"danger\"\n          duration={2500}\n        >\n          {action.payload?.data?.message}\n        </Notification>,\n        {\n          placement: 'top-center'\n        }\n      )\n    }\n  }\n\n  const handleDiscard = () => {\n    navigate('/purchaseOrder/list')\n  }\n\n  return (\n    <>\n      <PoForm\n        type=\"new\"\n        onFormSubmit={handleFormSubmit}\n        onDiscard={handleDiscard}\n        customers={customers}\n        products={products}\n        categories={categories}\n      />\n    </>\n  )\n}\n\nexport default NewPO\n"],"names":["combineReducers","data","state","injectReducer","newPoReducer","NewPO","dispatch","useDispatch","navigate","useNavigate","useEffect","getAllCustomers","getAllCategories","customers","useSelector","new_po","categories","categoryList","products","handleDiscard","_jsx","_Fragment","children","PoForm","type","onFormSubmit","async","values","setSubmitting","console","log","action","postNewPoRegister","addPo","_action$payload","_action$payload$data","payload","status","Toast","push","Notification","title","duration","placement","message","onDiscard"],"sourceRoot":""}