{"version":3,"file":"static/js/2444.ea9ca81c.chunk.js","mappings":"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","sources":["view/SuperAdmin/PurchaseOrder/EditPo/store/dataSlice.js","view/SuperAdmin/PurchaseOrder/EditPo/store/index.js","view/SuperAdmin/PurchaseOrder/EditPo/index.js","services/SuperAdmin/Po/PoService.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { apiGetAllCustomers } from \"../../../../../services/SuperAdmin/Customer/CustomerService\";\nimport { apiGetAllProductsWithDrawing } from \"../../../../../services/SuperAdmin/Product/IndexService\";\nimport { apiUpdatePo } from \"../../../../../services/SuperAdmin/Po/PoService\";\nimport { apiGetPoDetailsByPoId } from \"../../../../../services/SuperAdmin/Po/PoService\";\nimport { apiGetPurchaseOrderDetailsByPurchaseORderId } from \"../../../../../services/SuperAdmin/PruchaseOrder/PurchaseOrderService\";\nimport { apiGetAllCategories } from \"../../../../../services/SuperAdmin/Product/CategoryService\";\nimport { apiUpdatePurchaseOrder } from \"../../../../../services/SuperAdmin/Stock/StockService\";\nexport const getPoDetailsByPoId = createAsyncThunk(\n  \"po/details/data/details\",\n  async (data) => {\n    try {\n      const response = await apiGetPurchaseOrderDetailsByPurchaseORderId(data);\n      return response;\n    } catch (error) {\n      return error.response;\n    }\n  }\n);\n\nexport const getAllCustomers = createAsyncThunk(\n  \"edit/po/data/customer/all\",\n  async () => {\n    try {\n      const response = await apiGetAllCustomers();\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nexport const getAllProductsWithDrawing = createAsyncThunk(\n  \"edit/po/data/product/all\",\n  async () => {\n    try {\n      const response = await apiGetAllProductsWithDrawing();\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nexport const getAllCategories = createAsyncThunk(\n  \"edit/po/data/po/category/all\",\n  async (data) => {\n    try {\n      const response = await apiGetAllCategories(data);\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nexport const postUpdatePurchaseOrder = createAsyncThunk(\n  \"edit/po/data/po/update\",\n  async (data) => {\n    try {\n      const response = await apiUpdatePurchaseOrder(data);\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nconst dataSlice = createSlice({\n  name: \"edit/porder/data\",\n  initialState: {\n    customers: [],\n    products: [],\n    categoryList: [],\n    poDetails: {},\n  },\n  extraReducers: {\n    [getPoDetailsByPoId.fulfilled]: (state, action) => {\n      state.poDetails = {\n        ...action.payload.data.data,\n        PurchaseOrderLists: action.payload.data.data.PurchaseOrderLists.map(\n          (f) => {\n            return {\n              ...f,\n              revision_number: f.Product.Drawings[0].revision_number,\n            };\n          }\n        ),\n      };\n    },\n    [getAllCustomers.fulfilled]: (state, action) => {\n      state.customers = action.payload.data?.data || [];\n    },\n    [postUpdatePurchaseOrder.fulfilled]: (state) => {},\n    [getAllProductsWithDrawing.fulfilled]: (state, action) => {\n      state.products = action.payload.data?.data || [];\n    },\n    [getAllCategories.fulfilled]: (state, action) => {\n      state.categoryList = action.payload?.data?.data || [];\n    },\n  },\n});\n\nexport default dataSlice.reducer;\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport data from \"./dataSlice\";\nimport state from \"./stateSlice\";\nconst editPorderReducer = combineReducers({\n  data,\n  state,\n});\n\nexport default editPorderReducer;\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate, useLocation } from 'react-router-dom'\n\nimport {\n  getAllCategories,\n  getAllCustomers,\n  getAllProductsWithDrawing,\n  getPoDetailsByPoId,\n  postUpdatePurchaseOrder\n} from './store/dataSlice'\nimport PoForm from '../PoForm'\nimport editPorderReducer from './store'\nimport { injectReducer } from '../../../../store'\nimport { Notification, Toast } from '../../../../components/ui'\n\ninjectReducer('edit_porder', editPorderReducer)\n\nconst EditPO = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const po_id = location.pathname.substring(\n    location.pathname.lastIndexOf('/') + 1\n  )\n\n  const fetch = async () => {\n    dispatch(getAllCustomers())\n    dispatch(getAllProductsWithDrawing())\n    dispatch(getAllCategories())\n    if (po_id) {\n      await dispatch(getPoDetailsByPoId({ purchase_order_id: po_id }))\n    }\n  }\n\n  useEffect(() => {\n    fetch()\n  }, [po_id])\n\n  const initialData = useSelector((state) => state.edit_porder.data.poDetails)\n  const customers = useSelector((state) => state.edit_porder.data.customers)\n  const products = useSelector((state) => state.edit_porder.data.products)\n  const categories = useSelector((state) => state.edit_porder.data.categoryList)\n\n  const editPurchaseOrder = async (data) => {\n    const action = await dispatch(postUpdatePurchaseOrder(data))\n    return action\n  }\n\n  const handleFormSubmit = async (values, setSubmitting) => {\n    console.log(values)\n    setSubmitting(true)\n    const action = await editPurchaseOrder(values)\n    setSubmitting(false)\n    if (action.payload.status === 200) {\n      Toast.push(\n        <Notification\n          title=\"Successfully added\"\n          type=\"success\"\n          duration={2500}\n        >\n          Purchase Order successfully Updated\n        </Notification>,\n        {\n          placement: 'top-center'\n        }\n      )\n      handleDiscard()\n    }\n  }\n\n  const handleDiscard = () => {\n    navigate('/purchaseOrder/list')\n  }\n\n  return (\n    <>\n      <PoForm\n        type=\"edit\"\n        onFormSubmit={handleFormSubmit}\n        onDiscard={handleDiscard}\n        customers={customers}\n        productsData={products}\n        categories={categories}\n        initialData={{\n          ...initialData,\n          date: initialData ? new Date(initialData.date) : null,\n          category_id:\n            initialData?.PurchaseOrderLists?.length > 0\n              ? initialData.PurchaseOrderLists[0].Product?.category_id\n              : null\n        }}\n      />\n    </>\n  )\n}\n\nexport default EditPO\n","import ApiService from \"../../ApiService\";\n\nexport async function apiIsPONumberExists(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/Number/check\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiNewPoRegister(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/register\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiUpdatePo(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/update/id\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiDeletePo(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/delete/id\",\n    method: \"delete\",\n    data,\n  });\n}\nexport async function apiGetPoDetailsByPoId(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/id\",\n    method: \"post\",\n    data,\n  });\n}\nexport async function apiGetAllPoWithPagination(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetPODates(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/dates\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetPODeliveryDates(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/delivery/dates\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetPOBrotherAcceptDates(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/accept/delivery/dates\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetRawDates(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/raw/dates\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetMachiningDates(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/machining/dates\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiUpdatePOListByPOListId(data) {\n  return ApiService.fetchData({\n    url: \"/v1/web/company/executive/po/list/update\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetPoListByPOListId(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po-list/list/id\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetAcceptedPoInvoice(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/admin/po/invoice/accept\",\n    method: \"post\",\n    data,\n  });\n}\nexport async function apiGetAllPosByCustomerId(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/select/customer/id\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetUniquePONumber() {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/Unique/number\",\n    method: \"get\",\n  });\n}\n\nexport async function apiGetAllPoLists(params) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/lists\",\n    method: \"get\",\n    params,\n  });\n}\nexport async function apiGetPoNumber(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/number/po\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetAllPoYears() {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/years\",\n    method: \"get\",\n  });\n}\n\nexport async function apiGetAllPoMonths(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/months\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetAllPoDateFromMonthAndYear(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/month/dates\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetAllPoNumberOption(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/Number/po/option\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetAllPOAOption(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po/poa/option\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetAllProjectNumbers(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po-list/po/number\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetAllSerialNumber(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po-list/serial/number\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiPutAttachmentsPoList(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po-list/attachment\",\n    method: \"put\",\n    data,\n  });\n}\n\nexport async function apideleteAttachmentsPoList(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po-list/attachment/delete\",\n    method: \"put\",\n    data,\n  });\n}\n\nexport async function apiGetAllCustomersOption() {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/option\",\n    method: \"get\",\n  });\n}\n\nexport async function apiPostActualDates(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/po-list/date/update\",\n    method: \"post\",\n    data,\n  });\n}\n"],"names":["getPoDetailsByPoId","createAsyncThunk","async","apiGetPurchaseOrderDetailsByPurchaseORderId","data","error","response","getAllCustomers","apiGetAllCustomers","getAllProductsWithDrawing","apiGetAllProductsWithDrawing","getAllCategories","apiGetAllCategories","postUpdatePurchaseOrder","apiUpdatePurchaseOrder","createSlice","name","initialState","customers","products","categoryList","poDetails","extraReducers","fulfilled","state","action","payload","PurchaseOrderLists","map","f","revision_number","Product","Drawings","_action$payload$data","_action$payload$data2","_action$payload","_action$payload$data3","combineReducers","injectReducer","editPorderReducer","EditPO","_initialData$Purchase","_initialData$Purchase2","dispatch","useDispatch","navigate","useNavigate","location","useLocation","po_id","pathname","substring","lastIndexOf","useEffect","purchase_order_id","fetch","initialData","useSelector","edit_porder","categories","handleDiscard","_jsx","_Fragment","children","PoForm","type","onFormSubmit","values","setSubmitting","console","log","editPurchaseOrder","status","Toast","push","Notification","title","duration","placement","onDiscard","productsData","date","Date","category_id","length","apiIsPONumberExists","ApiService","fetchData","url","method","apiNewPoRegister","apiUpdatePo","apiDeletePo","apiGetPoDetailsByPoId","apiGetAllPoWithPagination","apiGetPODates","apiGetPODeliveryDates","apiGetPOBrotherAcceptDates","apiGetRawDates","apiGetMachiningDates","apiUpdatePOListByPOListId","apiGetPoListByPOListId","apiGetAllPosByCustomerId","apiGetUniquePONumber","apiGetAllPoLists","params","apiGetPoNumber","apiGetAllPoYears","apiGetAllPoMonths","apiGetAllPoDateFromMonthAndYear","apiGetAllPoNumberOption","apiGetAllPOAOption","apiGetAllProjectNumbers","apiGetAllSerialNumber","apiPutAttachmentsPoList","apideleteAttachmentsPoList","apiGetAllCustomersOption","apiPostActualDates"],"sourceRoot":""}