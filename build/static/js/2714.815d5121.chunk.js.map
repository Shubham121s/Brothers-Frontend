{"version":3,"file":"static/js/2714.815d5121.chunk.js","mappings":"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","sources":["services/SuperAdmin/Product/DrawingService.js","view/SuperAdmin/Product/NewProduct/store/dataSlice.js","view/SuperAdmin/Product/NewProduct/store/index.js","view/SuperAdmin/Product/NewProduct/index.js","../node_modules/form-data/lib/browser.js"],"sourcesContent":["import ApiService from \"../../ApiService\";\n\nexport async function apiUploadDrawingAttachment(data) {\n  return ApiService.fetchData({\n    url: \"v1/common/file/upload\",\n    method: \"post\",\n    data,\n  });\n}\nexport async function apiViewDrawingAttachment(data) {\n  return ApiService.fetchData({\n    url: \"v1/common/file/view\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetAllDrawingByProductId(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/product/drawing/id\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiUpdateDrawingByDrawingId(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/product/drawing/update/id\",\n    method: \"put\",\n    data,\n  });\n}\n\nexport async function apiDeleteDrawingByDrawingId(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/product/drawing/delete/id\",\n    method: \"delete\",\n    data,\n  });\n}\n\nexport async function apiPostNewDrawing(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/product/drawing/register\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiPostNewDrawingRegister(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/product/drawing/register/new\",\n    method: \"post\",\n    data,\n  });\n}\nexport async function apiPostDownloadDrawingAttachment(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/product/drawing/download/id\",\n    method: \"post\",\n    data,\n    responseType: \"blob\",\n  });\n}\n\nexport async function apiGetAllDrawingOption() {\n  return ApiService.fetchData({\n    url: \"v1/web/company/product/drawing/option\",\n    method: \"get\",\n  });\n}\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { apiGetAllCategories } from \"../../../../../services/SuperAdmin/Product/CategoryService\";\nimport { apiGetAllMaterialGrades } from \"../../../../../services/SuperAdmin/Product/MaterialGradeService\";\nimport { apiGetAllPatterns } from \"../../../../../services/SuperAdmin/Product/PatternService\";\nimport { apiPostNewProduct } from \"../../../../../services/SuperAdmin/Product/IndexService\";\n\nexport const getAllCategories = createAsyncThunk(\n  \"product/data/new/all/categories\",\n  async (data) => {\n    try {\n      const response = await apiGetAllCategories(data);\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nexport const getAllMaterialGrades = createAsyncThunk(\n  \"product/data/new/all/material/grades\",\n  async (data) => {\n    try {\n      const response = await apiGetAllMaterialGrades(data);\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\nexport const getAllPatterns = createAsyncThunk(\n  \"product/data/new/all/patterns\",\n  async (data) => {\n    try {\n      const response = await apiGetAllPatterns(data);\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nexport const postNewProduct = createAsyncThunk(\n  \"product/data/new/add\",\n  async (data) => {\n    try {\n      const response = await apiPostNewProduct(data);\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nconst dataSlice = createSlice({\n  name: \"product/data/new\",\n  initialState: {\n    categoryList: [],\n    materialGradeList: [],\n    patternList: [],\n  },\n  reducers: {},\n  extraReducers: {\n    [getAllCategories.fulfilled]: (state, action) => {\n      state.categoryList = action.payload?.data?.data || [];\n    },\n    [getAllMaterialGrades.fulfilled]: (state, action) => {\n      state.materialGradeList = action.payload?.data?.data || [];\n    },\n    [getAllPatterns.fulfilled]: (state, action) => {\n      state.patternList = action.payload?.data?.data || [];\n    },\n    [postNewProduct.fulfilled]: (state, action) => {},\n  },\n});\n\nexport default dataSlice.reducer;\n","import { combineReducers } from '@reduxjs/toolkit'\nimport data from './dataSlice'\nconst newProductReducer = combineReducers({\n    data,\n})\n\nexport default newProductReducer\n","import React, { useEffect } from 'react'\nimport { Toast, Notification } from '../../../../components/ui'\nimport { useNavigate } from 'react-router-dom'\nimport { injectReducer } from '../../../../store'\nimport newProductReducer from './store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  getAllCategories,\n  getAllMaterialGrades,\n  getAllPatterns,\n  postNewProduct\n} from './store/dataSlice'\nimport { apiPostNewProduct } from '../../../../services/SuperAdmin/Product/IndexService'\nimport ProductForm from '../ProductForm'\nimport FormData from 'form-data'\nimport { apiPostNewDrawing } from '../../../../services/SuperAdmin/Product/DrawingService'\n\ninjectReducer('new_product', newProductReducer)\n\nconst popNotification = (keyword, type, message) => {\n  Toast.push(\n    <Notification\n      title={keyword}\n      type={type}\n      duration={2500}\n    >\n      {message}\n    </Notification>,\n    {\n      placement: 'top-center'\n    }\n  )\n}\n\nconst NewProduct = () => {\n  const dispatch = useDispatch()\n  const categories = useSelector((state) => state.new_product.data.categoryList)\n  const materialGrades = useSelector(\n    (state) => state.new_product.data.materialGradeList\n  )\n  const patterns = useSelector((state) => state.new_product.data.patternList)\n  useEffect(() => {\n    dispatch(getAllCategories())\n    dispatch(getAllMaterialGrades())\n    dispatch(getAllPatterns())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  const navigate = useNavigate()\n\n  const handleFormSubmit = async (values, setSubmitting) => {\n    setSubmitting(true)\n\n    const action = await dispatch(postNewProduct(values))\n\n    if (action.payload.status < 300) {\n      const formData = new FormData()\n\n      formData.append('process_attachment', values.process_attachment)\n      formData.append('raw_attachment', values.raw_attachment)\n      formData.append('finish_attachment', values.finish_attachment)\n      formData.append('revision_number', values.revision_number)\n      formData.append('raw_weight', values.raw_weight)\n      formData.append('finish_weight', values.finish_weight)\n      formData.append('product_id', action.payload.data?.data?.product_id)\n      const response2 = await apiPostNewDrawing(formData)\n      setSubmitting(false)\n      if (response2.data?.success) {\n        popNotification(\n          'Successfully Added',\n          'success',\n          'Product Successfully created'\n        )\n        setSubmitting(false)\n      } else {\n        popNotification('Unsuccessful', 'danger', 'Product not created')\n        setSubmitting(false)\n      }\n      navigate(`/product/drawing/${action.payload.data?.data?.product_id}`)\n    } else {\n      popNotification('Unsuccessful', 'danger', action.payload?.data?.message)\n      setSubmitting(false)\n    }\n  }\n\n  const handleDiscard = () => {\n    navigate('/product')\n  }\n\n  return (\n    <>\n      <ProductForm\n        type=\"new\"\n        onFormSubmit={handleFormSubmit}\n        onDiscard={handleDiscard}\n        categories={categories}\n        materialGrades={materialGrades}\n        patterns={patterns}\n      />\n    </>\n  )\n}\n\nexport default NewProduct\n","'use strict';\n\n/* eslint-env browser */\nmodule.exports = typeof self === 'object' ? self.FormData : window.FormData;\n"],"names":["async","apiGetAllDrawingByProductId","data","ApiService","fetchData","url","method","apiUpdateDrawingByDrawingId","apiDeleteDrawingByDrawingId","apiPostNewDrawing","apiPostNewDrawingRegister","apiGetAllDrawingOption","getAllCategories","createAsyncThunk","apiGetAllCategories","error","response","getAllMaterialGrades","apiGetAllMaterialGrades","getAllPatterns","apiGetAllPatterns","postNewProduct","apiPostNewProduct","createSlice","name","initialState","categoryList","materialGradeList","patternList","reducers","extraReducers","fulfilled","state","action","_action$payload","_action$payload$data","payload","_action$payload2","_action$payload2$data","_action$payload3","_action$payload3$data","combineReducers","injectReducer","newProductReducer","popNotification","keyword","type","message","Toast","push","_jsx","Notification","title","duration","children","placement","NewProduct","dispatch","useDispatch","categories","useSelector","new_product","materialGrades","patterns","useEffect","navigate","useNavigate","_Fragment","ProductForm","onFormSubmit","values","setSubmitting","status","_action$payload$data$","_response2$data","_action$payload$data2","_action$payload$data3","formData","FormData","append","process_attachment","raw_attachment","finish_attachment","revision_number","raw_weight","finish_weight","product_id","response2","success","_action$payload$data4","onDiscard","handleDiscard","module","exports","self","window"],"sourceRoot":""}