{"version":3,"file":"static/js/710.231ce9e2.chunk.js","mappings":"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","sources":["../node_modules/lodash/now.js","../node_modules/lodash/_trimmedEndIndex.js","view/SuperAdmin/Customer/Dashboard/store/dataSlice.js","services/SuperAdmin/Customer/CustomerdashboardService.js","view/SuperAdmin/Customer/Dashboard/store/index.js","view/SuperAdmin/Customer/Dashboard/components/customerdashboardTable.js","view/SuperAdmin/Customer/constant.js","view/SuperAdmin/Customer/Dashboard/components/CustomerdashboardTableTools.js","view/SuperAdmin/Customer/Dashboard/components/CustomerMonthWiseSalesChart.js","view/SuperAdmin/Customer/Dashboard/components/CustomerYearWiseSalesChart.js","view/SuperAdmin/Customer/Dashboard/components/CustomerWeeklyWiseSalesChart.js","view/SuperAdmin/Customer/Dashboard/index.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/_baseTrim.js","components/shared/loaders/TableRowSkeleton.js","components/shared/DataTable.js","services/SuperAdmin/Customer/CustomerService.js","../node_modules/lodash/debounce.js"],"sourcesContent":["var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  apiDynamicDashboardData,\n  apiGetYears,\n  apiMonthlySalesData,\n  apiYearlySalesData\n} from '../../../../../services/SuperAdmin/Customer/CustomerdashboardService'\nimport { apiGetAllCustomersOption } from '../../../../../services/SuperAdmin/Customer/CustomerService'\nexport const getDynamicDashboardData = createAsyncThunk(\n  'customer/dashboard/data/dynamic',\n  async (data) => {\n    try {\n      const response = await apiDynamicDashboardData(data)\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nexport const getAllCustomerOption = createAsyncThunk(\n  'customer/dashboard/data/option/customer',\n  async (data) => {\n    try {\n      const response = await apiGetAllCustomersOption()\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nexport const getAllYears = createAsyncThunk(\n  'customer/dashboard/data/option/years',\n  async (data) => {\n    try {\n      const response = await apiGetYears()\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nexport const getMonthlySales = createAsyncThunk(\n  'customer/dashboard/data/month',\n  async (data) => {\n    try {\n      const response = await apiMonthlySalesData(data)\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nexport const getYarlySales = createAsyncThunk(\n  'customer/dashboard/data/yearly',\n  async (data) => {\n    try {\n      const response = await apiYearlySalesData(data)\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nexport const initialTableData = {\n  total: 0,\n  pageIndex: 1,\n  pageSize: 10,\n  customer_id: '',\n  year: '',\n  month: ''\n}\n\nexport const initialFilterData = {\n  type: ''\n}\n\nconst dataSlice = createSlice({\n  name: 'customer/dashboard/data',\n  initialState: {\n    loading: false,\n    customers: [],\n    years: [],\n    customerData: [],\n    monthlySales: {},\n    yearlySales: {},\n    tableData: initialTableData,\n    filterData: initialFilterData\n  },\n  reducers: {\n    setTableData: (state, action) => {\n      state.tableData = action.payload\n    },\n    setFilterData: (state, action) => {\n      state.filterData = action.payload\n    }\n  },\n  extraReducers: {\n    [getDynamicDashboardData.fulfilled]: (state, action) => {\n      state.customerData = action.payload.data?.data || []\n      state.tableData.total = action.payload?.data?.total || 1\n      state.loading = false\n    },\n    [getDynamicDashboardData.pending]: (state) => {\n      state.loading = true\n    },\n    [getAllCustomerOption.fulfilled]: (state, action) => {\n      state.customers = action.payload.data?.data || []\n    },\n    [getAllYears.fulfilled]: (state, action) => {\n      state.years = action.payload.data?.data || []\n    },\n    [getMonthlySales.fulfilled]: (state, action) => {\n      state.monthlySales = action.payload.data?.data || {}\n    },\n    [getYarlySales.fulfilled]: (state, action) => {\n      state.yearlySales = action.payload.data?.data || {}\n    }\n  }\n})\n\nexport const { setTableData, setFilterData } = dataSlice.actions\n\nexport default dataSlice.reducer\n","import ApiService from '../../ApiService'\n\nexport async function apiDynamicDashboardData(data) {\n  return ApiService.fetchData({\n    url: 'v1/web/company/customer/dashboard/dynamic',\n    method: 'post',\n    data\n  })\n}\n\nexport async function apiGetYears() {\n  return ApiService.fetchData({\n    url: 'v1/web/company/customer/dashboard/years',\n    method: 'get'\n  })\n}\n\nexport async function apiMonthlySalesData(data) {\n  return ApiService.fetchData({\n    url: 'v1/web/company/customer/dashboard/month',\n    method: 'post',\n    data\n  })\n}\n\nexport async function apiYearlySalesData(data) {\n  return ApiService.fetchData({\n    url: 'v1/web/company/customer/dashboard/yearly',\n    method: 'post',\n    data\n  })\n}\n","import { combineReducers } from '@reduxjs/toolkit'\nimport data from './dataSlice'\n\nconst customerDashboardReducer = combineReducers({\n  data\n})\n\nexport default customerDashboardReducer\n","import React, { useEffect, useCallback, useMemo } from \"react\";\nimport { Badge, Tag } from \"../../../../../components/ui\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getDynamicDashboardData,\n  setTableData,\n  getAllCustomerOption,\n  getAllYears,\n} from \"../store/dataSlice\";\nimport useThemeClass from \"../../../../../utils/hooks/useThemeClass\";\nimport dayjs from \"dayjs\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport DataTable from \"../../../../../components/shared/DataTable\";\n\nconst NameColumn = ({ row }) => {\n  const { textTheme } = useThemeClass();\n\n  return <div className=\"items-center uppercase\">{row.name}</div>;\n};\n\nconst columns = [\n  {\n    header: \"Name\",\n    accessorKey: \"name\",\n    cell: (props) => {\n      const row = props.row.original;\n      return <NameColumn row={row} />;\n    },\n  },\n  {\n    header: \"Sales\",\n    cell: (props) => {\n      const row = props.row.original;\n      return <span className=\"uppercase\">{\"₹ \" + row?.GRANDTOTAL}</span>;\n    },\n  },\n];\n\nconst CustomerDashboardTable = () => {\n  const dispatch = useDispatch();\n  const data = useSelector(\n    (state) => state.customer_dashboard.data.customerData\n  );\n\n  const loading = useSelector((state) => state.customer_dashboard.data.loading);\n  const { type } = useSelector(\n    (state) => state.customer_dashboard.data.filterData\n  );\n\n  const { pageIndex, pageSize, sort, query, total } = useSelector(\n    (state) => state.customer_dashboard.data.tableData\n  );\n\n  const fetchData = useCallback(() => {\n    dispatch(getDynamicDashboardData({ pageIndex, pageSize }));\n    dispatch(getAllCustomerOption());\n    dispatch(getAllYears());\n  }, [pageIndex, pageSize, dispatch]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData, pageIndex, pageSize]);\n\n  const tableData = useMemo(\n    () => ({ pageIndex, pageSize }),\n    [pageIndex, pageSize, total]\n  );\n\n  const onPaginationChange = (page) => {\n    const newTableData = cloneDeep(tableData);\n    newTableData.pageIndex = page;\n    dispatch(setTableData(newTableData));\n  };\n\n  const onSelectChange = (value) => {\n    const newTableData = cloneDeep(tableData);\n    newTableData.pageSize = Number(value);\n    newTableData.pageIndex = 1;\n    dispatch(setTableData(newTableData));\n  };\n\n  return (\n    <>\n      <DataTable\n        columns={columns}\n        data={data}\n        loading={loading}\n        pagingData={{ pageIndex, pageSize, query, total }}\n        onPaginationChange={onPaginationChange}\n        onSelectChange={onSelectChange}\n      />\n    </>\n  );\n};\n\nexport default CustomerDashboardTable;\n","export const COUNTRY = ['INDIA', 'RUSSIA', 'USA', 'JAPAN']\n\nexport const MONTHS = [\n  { label: 'JAN', value: 1 },\n  { label: 'FEB', value: 2 },\n  { label: 'MAR', value: 3 },\n  { label: 'APR', value: 4 },\n  { label: 'MAY', value: 5 },\n  { label: 'JUN', value: 6 },\n  { label: 'JUL', value: 7 },\n  { label: 'AUG', value: 8 },\n  { label: 'SEP', value: 9 },\n  { label: 'OCT', value: 10 },\n  { label: 'NOV', value: 11 },\n  { label: 'DEC', value: 12 }\n]\n\nexport const STATE = [\n  {\n    INDIA: [\n      {\n        STATE: 'MAHARSTARA',\n        STATE_CODE: 23\n      }\n    ]\n  },\n  {\n    RUSSIA: []\n  },\n  {\n    USA: []\n  },\n  {\n    JAPAN: []\n  }\n]\n","import React, { useRef, useState } from 'react'\nimport { Button, Card, Select } from '../../../../../components/ui'\nimport {\n  setTableData,\n  setAllFilterData,\n  getDynamicDashboardData\n} from '../store/dataSlice'\nimport { useDispatch, useSelector } from 'react-redux'\nimport cloneDeep from 'lodash/cloneDeep'\nimport debounce from 'lodash/debounce'\nimport { HiOutlineFilter } from 'react-icons/hi'\nimport { MONTHS } from '../../constant'\n\nconst CustomerdashboardTableTools = ({ DeliveryStatus }) => {\n  const [open, setOpen] = useState(false)\n  const [customerValues, setCustomerValues] = useState([])\n  const [yearValues, setyearValues] = useState([])\n  const [monthValues, setMonthValues] = useState([])\n  const dispatch = useDispatch()\n\n  const tableData = useSelector(\n    (state) => state.customer_dashboard.data.tableData\n  )\n  const CustomerOption = useSelector(\n    (state) => state.customer_dashboard.data.customers\n  )\n\n  const yaerOption = useSelector((state) => state.customer_dashboard.data.years)\n\n  const { customer_id, year, month } = useSelector(\n    (state) => state.customer_dashboard.data.tableData\n  )\n\n  const onClearAll = () => {\n    const newTableData = cloneDeep(tableData)\n    newTableData.customer_id = ''\n    newTableData.year = ''\n    newTableData.month = ''\n\n    fetchData(newTableData)\n  }\n\n  const debounceFn = debounce((val, type) => handleDebounceFn(val, type), 50)\n\n  function handleDebounceFn(val, type) {\n    const newTableData = cloneDeep(tableData)\n    if (type === 'customer') {\n      setCustomerValues(val)\n      let customersIds = val.map((m) => m.value)\n      newTableData.customer_id = JSON.stringify(customersIds)\n    } else if (type === 'year') {\n      setyearValues(val)\n      let years = val.map((m) => m.value)\n      newTableData.year = JSON.stringify(years)\n    } else if (type === 'month') {\n      setMonthValues(val)\n      let months = val.map((m) => m.value)\n      newTableData.month = JSON.stringify(months)\n    }\n\n    newTableData.pageIndex = 1\n    if (val) {\n      fetchData(newTableData)\n    } else {\n      fetchData(newTableData)\n    }\n  }\n\n  const fetchData = (data) => {\n    dispatch(setTableData(data))\n    dispatch(getDynamicDashboardData({ ...data }))\n  }\n\n  const onEdit = (e, type) => {\n    if (type === 'customer') {\n      debounceFn(e, type)\n    } else if (type === 'year') {\n      debounceFn(e, type)\n    } else if (type === 'month') {\n      debounceFn(e, type)\n    }\n  }\n\n  return (\n    <>\n      <div className=\"flex items-center justify-between gap-2 mb-4\">\n        {/* <h3>Master Product Planner</h3> */}\n        <div></div>\n        <div className=\"flex gap-4\">\n          <Button\n            size=\"sm\"\n            icon={<HiOutlineFilter />}\n            onClick={() => setOpen(() => !open)}\n          >\n            Filter\n          </Button>\n          <Button\n            size=\"sm\"\n            onClick={onClearAll}\n          >\n            Clear All\n          </Button>\n        </div>\n      </div>\n      {open && (\n        <Card className=\"mb-4\">\n          <div className=\"grid grid-cols-5 gap-2\">\n            <Select\n              isMulti\n              placeholder=\"Select customer\"\n              size=\"sm\"\n              options={CustomerOption}\n              value={customerValues}\n              onChange={(e) => onEdit(e, 'customer')}\n            />\n            <Select\n              isMulti\n              placeholder=\"Select Year\"\n              size=\"sm\"\n              options={yaerOption}\n              value={yearValues}\n              onChange={(e) => onEdit(e, 'year')}\n            />\n            <Select\n              isMulti\n              placeholder=\"Select Months\"\n              size=\"sm\"\n              options={MONTHS}\n              value={monthValues}\n              onChange={(e) => onEdit(e, 'month')}\n            />\n          </div>\n        </Card>\n      )}\n    </>\n  )\n}\n\nexport default CustomerdashboardTableTools\n","import React, { useEffect, useState } from 'react'\nimport Chart from 'react-apexcharts'\nimport { COLORS } from '../../../../../constants/chart.constant'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getMonthlySales } from '../store/dataSlice'\nimport { Select } from '../../../../../components/ui'\n\nconst CustomerMonthWiseSalesChart = () => {\n  const [customer, setCustomer] = useState(null)\n  const [customerName, setCustomerName] = useState(null)\n  const dispatch = useDispatch()\n\n  const monthlySales = useSelector(\n    (state) => state.customer_dashboard.data.monthlySales\n  )\n  const CustomerOption = useSelector(\n    (state) => state.customer_dashboard.data.customers\n  )\n  const data = [\n    {\n      name: 'Net Sales ₹ ',\n      data: monthlySales.revenue || []\n    }\n  ]\n\n  useEffect(() => {\n    fetchData()\n  }, [customer])\n\n  const fetchData = async () => {\n    dispatch(getMonthlySales({ customer_id: customer }))\n  }\n\n  const handleChange = (e) => {\n    setCustomer(e.value)\n    setCustomerName(e.label)\n  }\n\n  return (\n    <>\n      <div className=\"grid grid-cols-3 mb-4\">\n        <Select\n          placeholder=\"Select customer\"\n          size=\"sm\"\n          options={CustomerOption}\n          value={CustomerOption.filter((cust) => cust.value === customer)}\n          onChange={handleChange}\n        />\n        <div></div>\n      </div>\n      <Chart\n        options={{\n          dataLabels: {\n            offsetY: -25,\n            style: {\n              fontSize: '12px'\n            }\n          },\n          chart: {\n            stacked: true,\n            toolbar: {\n              show: true,\n              tools: {\n                download: false,\n                selection: true,\n                zoom: true,\n                zoomin: true,\n                zoomout: true,\n                pan: true,\n                reset: true\n              }\n            },\n            zoom: {\n              enabled: true\n            }\n          },\n          colors: ['#f28500'],\n          responsive: [\n            {\n              breakpoint: 480,\n              options: {\n                legend: {\n                  position: 'bottom',\n                  offsetX: -10,\n                  offsetY: 0\n                }\n              }\n            }\n          ],\n          plotOptions: {\n            bar: {\n              horizontal: false,\n              endingShape: 'round',\n              borderRadius: 8\n            }\n          },\n          xaxis: {\n            categories: monthlySales.months || []\n          },\n          legend: {\n            position: 'right',\n            offsetY: 40\n          },\n          fill: {\n            opacity: 1\n          },\n          title: {\n            text: `${\n              customer ? `${customerName}` : 'All Customers'\n            } Monthly Sales`,\n            align: 'center',\n            style: {\n              fontSize: '20px',\n              fontWeight: 'normal',\n              color: '#263238'\n            }\n          }\n        }}\n        series={data}\n        type=\"bar\"\n        height={300}\n      />\n    </>\n  )\n}\n\nexport default CustomerMonthWiseSalesChart\n","import React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { COLORS } from \"../../../../../constants/chart.constant\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getYarlySales } from \"../store/dataSlice\";\nimport { Select } from \"../../../../../components/ui\";\n\nconst CustomerYearWiseSalesChart = () => {\n  const [customer, setCustomer] = useState(null);\n  const [customerName, setCustomerName] = useState(null);\n  const dispatch = useDispatch();\n\n  console.log(\"customer\", customer);\n  const yearlySales = useSelector(\n    (state) => state.customer_dashboard.data.yearlySales\n  );\n\n  const CustomerOption = useSelector(\n    (state) => state.customer_dashboard.data.customers\n  );\n  const data = [\n    {\n      name: \"Net Sales ₹ \",\n      data: yearlySales.revenue || [],\n    },\n  ];\n\n  useEffect(() => {\n    fetchData();\n  }, [customer]);\n\n  const fetchData = async () => {\n    dispatch(getYarlySales({ customer_id: customer }));\n  };\n\n  const handleChange = (e) => {\n    setCustomer(e.value);\n    setCustomerName(e.label);\n  };\n\n  return (\n    <>\n      <div className=\"grid grid-cols-3 mb-4\">\n        <Select\n          placeholder=\"Select customer\"\n          size=\"sm\"\n          options={CustomerOption}\n          value={CustomerOption.filter((cust) => cust.value === customer)}\n          onChange={handleChange}\n        />\n        <div></div>\n      </div>\n      <Chart\n        options={{\n          dataLabels: {\n            offsetY: -25,\n            style: {\n              fontSize: \"12px\",\n            },\n          },\n          chart: {\n            stacked: true,\n            toolbar: {\n              show: true,\n              tools: {\n                download: false,\n                selection: true,\n                zoom: true,\n                zoomin: true,\n                zoomout: true,\n                pan: true,\n                reset: true,\n              },\n            },\n            zoom: {\n              enabled: true,\n            },\n          },\n          colors: [\"#DA70D6\"],\n          responsive: [\n            {\n              breakpoint: 480,\n              options: {\n                legend: {\n                  position: \"bottom\",\n                  offsetX: -10,\n                  offsetY: 0,\n                },\n              },\n            },\n          ],\n          plotOptions: {\n            bar: {\n              horizontal: false,\n              endingShape: \"round\",\n              borderRadius: 8,\n            },\n          },\n          xaxis: {\n            categories: yearlySales.years || [],\n          },\n          legend: {\n            position: \"right\",\n            offsetY: 40,\n          },\n          fill: {\n            opacity: 1,\n          },\n          title: {\n            text: `${\n              customer ? `${customerName}` : \"All Customers\"\n            } Yearly Sales`,\n            align: \"center\",\n            style: {\n              fontSize: \"20px\",\n              fontWeight: \"normal\",\n              color: \"#263238\",\n            },\n          },\n        }}\n        series={data}\n        type=\"bar\"\n        height={300}\n      />\n    </>\n  );\n};\n\nexport default CustomerYearWiseSalesChart;\n","import React, { useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Select } from \"../../../../../components/ui\";\n\nconst CustomerWiseWeeklySalesChart = () => {\n  const [customer, setCustomer] = useState(null);\n  const [customerName, setCustomerName] = useState(null);\n\n  // Dummy data for weekly sales\n  const weeklySales = {\n    revenue: [5000, 7000, 4500, 8000, 6500, 9000, 10000], // Weekly sales revenue\n    days: [\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n      \"Sunday\",\n    ],\n  };\n\n  const customerSales = {\n    1: [4000, 6000, 4500, 7000, 6500, 8000, 9500], // Customer A\n    2: [5000, 7000, 4800, 7500, 6200, 8500, 9900], // Customer B\n    3: [5500, 7500, 5000, 8000, 6700, 8900, 10200], // Customer C\n  };\n\n  const CustomerOption = [\n    { label: \"Customer A\", value: \"1\" },\n    { label: \"Customer B\", value: \"2\" },\n    { label: \"Customer C\", value: \"3\" },\n  ];\n\n  const data = [\n    {\n      name: \"Net Sales ₹\",\n      data: customerSales[customer] || weeklySales.revenue,\n    },\n  ];\n\n  const handleChange = (e) => {\n    setCustomer(e.value);\n    setCustomerName(e.label);\n  };\n\n  return (\n    <>\n      <div className=\"grid grid-cols-3 mb-4\">\n        <Select\n          placeholder=\"Select customer\"\n          size=\"sm\"\n          options={CustomerOption}\n          value={CustomerOption.filter((cust) => cust.value === customer)}\n          onChange={handleChange}\n        />\n        <div></div>\n      </div>\n      <Chart\n        options={{\n          dataLabels: {\n            offsetY: -25,\n            style: {\n              fontSize: \"12px\",\n            },\n          },\n          chart: {\n            stacked: true,\n            toolbar: {\n              show: true,\n              tools: {\n                download: false,\n                selection: true,\n                zoom: true,\n                zoomin: true,\n                zoomout: true,\n                pan: true,\n                reset: true,\n              },\n            },\n            zoom: {\n              enabled: true,\n            },\n          },\n          colors: [\"#FFA07A\"],\n          responsive: [\n            {\n              breakpoint: 480,\n              options: {\n                legend: {\n                  position: \"bottom\",\n                  offsetX: -10,\n                  offsetY: 0,\n                },\n              },\n            },\n          ],\n          plotOptions: {\n            bar: {\n              horizontal: false,\n              endingShape: \"round\",\n              borderRadius: 8,\n            },\n          },\n          xaxis: {\n            categories: weeklySales.days,\n          },\n          legend: {\n            position: \"right\",\n            offsetY: 40,\n          },\n          fill: {\n            opacity: 1,\n          },\n          title: {\n            text: `${\n              customer ? `${customerName}` : \"All Customers\"\n            } Weekly Sales`,\n            align: \"center\",\n            style: {\n              fontSize: \"20px\",\n              fontWeight: \"normal\",\n              color: \"#263238\",\n            },\n          },\n        }}\n        series={data}\n        type=\"bar\"\n        height={300}\n      />\n    </>\n  );\n};\n\nexport default CustomerWiseWeeklySalesChart;\n","import React, { useEffect } from \"react\";\nimport { Loading } from \"../../../../components/shared\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { injectReducer } from \"../../../../store\";\nimport customerDashboardReducer from \"./store\";\nimport CustomerDashboardTable from \"./components/customerdashboardTable\";\nimport CustomerdashboardTableTools from \"./components/CustomerdashboardTableTools\";\nimport CustomerMonthWiseSalesChart from \"./components/CustomerMonthWiseSalesChart\";\nimport CustomerYearWiseSalesChart from \"./components/CustomerYearWiseSalesChart\";\nimport { Card } from \"../../../../components/ui\";\nimport CustomerWiseWeeklySalesChart from \"./components/CustomerWeeklyWiseSalesChart\";\n\ninjectReducer(\"customer_dashboard\", customerDashboardReducer);\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Loading loading={false}>\n      {/* <Statistic data={data} /> */}\n      {/* <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 mt-4\">\n        <Card className=\"\">\n          <CalibrationNearToDate />\n        </Card>\n        <Card className=\"col-span-2\">\n          <CalibrationPieChart data={data?.pieChartData} />\n        </Card>\n      </div> */}\n      <div className=\"grid grid-cols-2 gap-4 mb-4\">\n        <Card>\n          <CustomerYearWiseSalesChart />\n        </Card>\n        <Card>\n          <CustomerMonthWiseSalesChart />\n        </Card>\n      </div>\n\n      <Card>\n        <CustomerWiseWeeklySalesChart />\n      </Card>\n\n      <Card>\n        <CustomerdashboardTableTools />\n        <CustomerDashboardTable />\n      </Card>\n    </Loading>\n  );\n};\n\nexport default Dashboard;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Table, Skeleton } from '../../../components/ui'\n\nconst { Tr, Td, TBody } = Table\n\nconst TableRowSkeleton = (props) => {\n    const { columns, rows, avatarInColumns, avatarProps } = props\n\n    return (\n        <TBody>\n            {Array.from(new Array(rows), (_, i) => i + 0).map((row) => (\n                <Tr key={`row-${row}`}>\n                    {Array.from(new Array(columns), (_, i) => i + 0).map(\n                        (col) => (\n                            <Td key={`col-${col}`}>\n                                <div className=\"flex flex-auto items-center gap-2\">\n                                    {avatarInColumns.includes(col) && (\n                                        <div>\n                                            <Skeleton\n                                                variant=\"circle\"\n                                                {...avatarProps}\n                                            />\n                                        </div>\n                                    )}\n                                    <Skeleton />\n                                </div>\n                            </Td>\n                        )\n                    )}\n                </Tr>\n            ))}\n        </TBody>\n    )\n}\n\nTableRowSkeleton.propTypes = {\n    columns: PropTypes.number,\n    rows: PropTypes.number,\n    avatarInColumns: PropTypes.arrayOf(PropTypes.number),\n}\n\nTableRowSkeleton.defaultProps = {\n    columns: 1,\n    rows: 10,\n    avatarInColumns: [],\n}\n\nexport default TableRowSkeleton\n","import React, {\n  forwardRef,\n  useMemo,\n  useRef,\n  useEffect,\n  useState,\n  useImperativeHandle,\n} from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport {\n  Table,\n  Pagination,\n  Select,\n  Checkbox,\n  Alert,\n} from \"../../components/ui\";\nimport TableRowSkeleton from \"./loaders/TableRowSkeleton\";\nimport Loading from \"./Loading\";\nimport {\n  useReactTable,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  flexRender,\n} from \"@tanstack/react-table\";\n\nconst { Tr, Th, Td, THead, TBody } = Table;\n\nconst IndeterminateCheckbox = (props) => {\n  const {\n    indeterminate,\n    onChange,\n    onCheckBoxChange,\n    onIndeterminateCheckBoxChange,\n    ...rest\n  } = props;\n\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if (typeof indeterminate === \"boolean\") {\n      ref.current.indeterminate = !rest.checked && indeterminate;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ref, indeterminate]);\n\n  const handleChange = (e) => {\n    onChange(e);\n    onCheckBoxChange?.(e);\n    onIndeterminateCheckBoxChange?.(e);\n  };\n\n  return (\n    <Checkbox\n      className=\"mb-0\"\n      ref={ref}\n      onChange={(_, e) => handleChange(e)}\n      {...rest}\n    />\n  );\n};\n\nconst DataTable = forwardRef((props, ref) => {\n  const {\n    skeletonAvatarColumns,\n    columns: columnsProp,\n    data,\n    loading,\n    onCheckBoxChange,\n    onIndeterminateCheckBoxChange,\n    onPaginationChange,\n    onSelectChange,\n    onSort,\n    pageSizes,\n    selectable,\n    skeletonAvatarProps,\n    pagingData,\n    tableWidth = \"100%\",\n  } = props;\n\n  const { pageSize, pageIndex, total } = pagingData;\n\n  const [sorting, setSorting] = useState(null);\n\n  const pageSizeOption = useMemo(\n    () =>\n      pageSizes.map((number) => ({\n        value: number,\n        label: `${number} / page`,\n      })),\n    [pageSizes]\n  );\n\n  const handleCheckBoxChange = (checked, row) => {\n    if (!loading) {\n      onCheckBoxChange?.(checked, row);\n    }\n  };\n\n  const handleIndeterminateCheckBoxChange = (checked, rows) => {\n    if (!loading) {\n      onIndeterminateCheckBoxChange?.(checked, rows);\n    }\n  };\n\n  const handlePaginationChange = (page) => {\n    if (!loading) {\n      onPaginationChange?.(page);\n    }\n  };\n\n  const handleSelectChange = (value) => {\n    if (!loading) {\n      onSelectChange?.(Number(value));\n    }\n  };\n\n  useEffect(() => {\n    if (Array.isArray(sorting)) {\n      const sortOrder =\n        sorting.length > 0 ? (sorting[0].desc ? \"desc\" : \"asc\") : \"\";\n      const id = sorting.length > 0 ? sorting[0].id : \"\";\n      onSort?.({ order: sortOrder, key: id });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sorting]);\n\n  const hasOldColumnMetaKey = columnsProp.some(\n    (col) => col.Header || col.accessor || col.Cell\n  );\n\n  const finalColumns = useMemo(() => {\n    const columns = columnsProp.map((col) => ({\n      ...col,\n      size: col.size || undefined,\n      minSize: col.minSize || 100,\n      maxSize: col.maxSize || 300,\n    }));\n\n    if (selectable) {\n      return [\n        {\n          id: \"select\",\n          header: ({ table }) => (\n            <IndeterminateCheckbox\n              checked={table.getIsAllRowsSelected()}\n              indeterminate={table.getIsSomeRowsSelected()}\n              onChange={table.getToggleAllRowsSelectedHandler()}\n              onIndeterminateCheckBoxChange={(e) => {\n                handleIndeterminateCheckBoxChange(\n                  e.target.checked,\n                  table.getRowModel().rows\n                );\n              }}\n            />\n          ),\n          cell: ({ row }) => (\n            <IndeterminateCheckbox\n              checked={row.getIsSelected()}\n              disabled={!row.getCanSelect()}\n              indeterminate={row.getIsSomeSelected()}\n              onChange={row.getToggleSelectedHandler()}\n              onCheckBoxChange={(e) =>\n                handleCheckBoxChange(e.target.checked, row.original)\n              }\n            />\n          ),\n          size: 50,\n          minSize: 50,\n          maxSize: 50,\n        },\n        ...columns,\n      ];\n    }\n    return columns;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [columnsProp, selectable]);\n\n  const table = useReactTable({\n    data,\n    columns: hasOldColumnMetaKey ? [] : finalColumns,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    manualPagination: true,\n    manualSorting: true,\n    onSortingChange: setSorting,\n    state: {\n      sorting,\n    },\n    columnResizeMode: \"onChange\",\n  });\n\n  const resetSorting = () => {\n    table.resetSorting();\n  };\n\n  const resetSelected = () => {\n    table.toggleAllRowsSelected(false);\n  };\n\n  useImperativeHandle(ref, () => ({\n    resetSorting,\n    resetSelected,\n  }));\n\n  if (hasOldColumnMetaKey) {\n    const message =\n      \"You are using old react-table v7 column config, please use v8 column config instead, refer to our demo or https://tanstack.com/table/v8\";\n\n    if (process.env.NODE_ENV === \"development\") {\n      console.warn(message);\n    }\n\n    return <Alert>{message}</Alert>;\n  }\n\n  return (\n    <Loading loading={loading && data.length !== 0} type=\"cover\">\n      <div style={{ width: tableWidth, overflowX: \"auto\" }}>\n        <Table style={{ width: \"100%\", tableLayout: \"fixed\" }}>\n          <THead>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <Tr key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <Th\n                      key={header.id}\n                      colSpan={header.colSpan}\n                      style={{ width: `${header.column.getSize()}px` }}\n                    >\n                      {header.isPlaceholder ? null : (\n                        <div\n                          className={classNames(\n                            // header.column.getCanSort() && 'cursor-pointer select-none point',\n                            loading && \"pointer-events-none\"\n                          )}\n                          // onClick={header.column.getToggleSortingHandler()}\n                        >\n                          {flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                          {/* {header.column.getCanSort() && <Sorter sort={header.column.getIsSorted()} />} */}\n                        </div>\n                      )}\n                    </Th>\n                  );\n                })}\n              </Tr>\n            ))}\n          </THead>\n          {loading && data.length === 0 ? (\n            <TableRowSkeleton\n              columns={finalColumns.length}\n              rows={pagingData.pageSize}\n              avatarInColumns={skeletonAvatarColumns}\n              avatarProps={skeletonAvatarProps}\n            />\n          ) : (\n            <TBody>\n              {table\n                .getRowModel()\n                .rows.slice(0, pageSize)\n                .map((row) => {\n                  return (\n                    <Tr key={row.id}>\n                      {row.getVisibleCells().map((cell) => {\n                        return (\n                          <Td\n                            key={cell.id}\n                            style={{ width: `${cell.column.getSize()}px` }}\n                          >\n                            {flexRender(\n                              cell.column.columnDef.cell,\n                              cell.getContext()\n                            )}\n                          </Td>\n                        );\n                      })}\n                    </Tr>\n                  );\n                })}\n            </TBody>\n          )}\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-between mt-4\">\n        <Pagination\n          pageSize={pageSize}\n          currentPage={pageIndex}\n          total={total}\n          onChange={handlePaginationChange}\n        />\n        <div style={{ minWidth: 130 }}>\n          <Select\n            size=\"sm\"\n            menuPlacement=\"top\"\n            isSearchable={false}\n            value={pageSizeOption.filter((option) => option.value === pageSize)}\n            options={pageSizeOption}\n            onChange={(option) => handleSelectChange(option.value)}\n          />\n        </div>\n      </div>\n    </Loading>\n  );\n});\n\nDataTable.propTypes = {\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  loading: PropTypes.bool,\n  onCheckBoxChange: PropTypes.func,\n  onIndeterminateCheckBoxChange: PropTypes.func,\n  onPaginationChange: PropTypes.func,\n  onSelectChange: PropTypes.func,\n  onSort: PropTypes.func,\n  pageSizes: PropTypes.arrayOf(PropTypes.number),\n  selectable: PropTypes.bool,\n  skeletonAvatarColumns: PropTypes.arrayOf(PropTypes.number),\n  skeletonAvatarProps: PropTypes.object,\n  pagingData: PropTypes.shape({\n    total: PropTypes.number,\n    pageIndex: PropTypes.number,\n    pageSize: PropTypes.number,\n  }),\n};\n\nDataTable.defaultProps = {\n  pageSizes: [10, 25, 50, 100],\n  pagingData: {\n    total: 0,\n    pageIndex: 1,\n    pageSize: 10,\n  },\n  data: [],\n  columns: [],\n  selectable: false,\n  loading: false,\n};\n\nexport default DataTable;\n","import ApiService from \"../../ApiService\";\n\nexport async function apiGetCustomerStatisticData() {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/statistic\",\n    method: \"get\",\n  });\n}\n\n// export async function apiDeleteCustomer(data) {\n//   return ApiService.fetchData({\n//     url: \"v1/web/company/customer/delete\",\n//     method: \"delete\",\n//     data,\n//   });\n// }\n\nexport async function apiUpdateCustomerDetails(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/update\",\n    method: \"put\",\n    data,\n  });\n}\n\nexport async function apiGetAllCustomers(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/select\",\n    method: \"get\",\n  });\n}\n\nexport async function apiPostRegisterNewCustomer(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/register\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiUpdateCustomer(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/update/id\",\n    method: \"put\",\n    data,\n  });\n}\nexport async function apiGetCustomersWithPagination(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetCustomerDetailsByCustomerId(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/details/id\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetAllCustomersOption() {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/option\",\n    method: \"get\",\n  });\n}\n\nexport async function apiDeleteCustomer(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/delete/id\",\n    method: \"delete\",\n    data,\n  });\n}\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n"],"names":["root","require","module","exports","Date","now","reWhitespace","string","index","length","test","charAt","getDynamicDashboardData","createAsyncThunk","async","response","data","ApiService","fetchData","url","method","apiDynamicDashboardData","error","getAllCustomerOption","apiGetAllCustomersOption","getAllYears","apiGetYears","getMonthlySales","apiMonthlySalesData","getYarlySales","apiYearlySalesData","dataSlice","createSlice","name","initialState","loading","customers","years","customerData","monthlySales","yearlySales","tableData","total","pageIndex","pageSize","customer_id","year","month","filterData","type","reducers","setTableData","state","action","payload","setFilterData","extraReducers","fulfilled","_action$payload$data","_action$payload","_action$payload$data2","pending","_action$payload$data3","_action$payload$data4","_action$payload$data5","_action$payload$data6","actions","combineReducers","NameColumn","_ref","row","textTheme","useThemeClass","_jsx","className","children","columns","header","accessorKey","cell","props","original","GRANDTOTAL","CustomerDashboardTable","dispatch","useDispatch","useSelector","customer_dashboard","sort","query","useCallback","useEffect","useMemo","_Fragment","DataTable","pagingData","onPaginationChange","page","newTableData","cloneDeep","onSelectChange","value","Number","MONTHS","label","DeliveryStatus","open","setOpen","useState","customerValues","setCustomerValues","yearValues","setyearValues","monthValues","setMonthValues","CustomerOption","yaerOption","debounceFn","debounce","val","customersIds","map","m","JSON","stringify","months","handleDebounceFn","onEdit","e","_jsxs","Button","size","icon","HiOutlineFilter","onClick","onClearAll","Card","Select","isMulti","placeholder","options","onChange","CustomerMonthWiseSalesChart","customer","setCustomer","customerName","setCustomerName","revenue","filter","cust","Chart","dataLabels","offsetY","style","fontSize","chart","stacked","toolbar","show","tools","download","selection","zoom","zoomin","zoomout","pan","reset","enabled","colors","responsive","breakpoint","legend","position","offsetX","plotOptions","bar","horizontal","endingShape","borderRadius","xaxis","categories","fill","opacity","title","text","align","fontWeight","color","series","height","CustomerYearWiseSalesChart","console","log","CustomerWiseWeeklySalesChart","weeklySales","days","injectReducer","customerDashboardReducer","Dashboard","Loading","CustomerdashboardTableTools","baseTrim","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","slice","trimmedEndIndex","reTrimStart","replace","Tr","Td","TBody","Table","TableRowSkeleton","rows","avatarInColumns","avatarProps","Array","from","_","i","col","includes","Skeleton","variant","defaultProps","Th","THead","IndeterminateCheckbox","indeterminate","onCheckBoxChange","onIndeterminateCheckBoxChange","rest","ref","useRef","current","checked","Checkbox","handleChange","forwardRef","skeletonAvatarColumns","columnsProp","onSort","pageSizes","selectable","skeletonAvatarProps","tableWidth","sorting","setSorting","pageSizeOption","number","isArray","sortOrder","desc","id","order","key","hasOldColumnMetaKey","some","Header","accessor","Cell","finalColumns","undefined","minSize","maxSize","table","getIsAllRowsSelected","getIsSomeRowsSelected","getToggleAllRowsSelectedHandler","handleIndeterminateCheckBoxChange","target","getRowModel","_ref2","getIsSelected","disabled","getCanSelect","getIsSomeSelected","getToggleSelectedHandler","handleCheckBoxChange","useReactTable","getCoreRowModel","getFilteredRowModel","getPaginationRowModel","getSortedRowModel","manualPagination","manualSorting","onSortingChange","columnResizeMode","resetSorting","resetSelected","toggleAllRowsSelected","useImperativeHandle","message","Alert","width","overflowX","tableLayout","getHeaderGroups","headerGroup","headers","colSpan","column","getSize","isPlaceholder","classNames","flexRender","columnDef","getContext","getVisibleCells","Pagination","currentPage","minWidth","menuPlacement","isSearchable","option","handleSelectChange","apiGetCustomerStatisticData","apiUpdateCustomerDetails","apiGetAllCustomers","apiPostRegisterNewCustomer","apiUpdateCustomer","apiGetCustomersWithPagination","apiGetCustomerDetailsByCustomerId","apiDeleteCustomer","toNumber","nativeMax","Math","max","nativeMin","min","func","wait","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","clearTimeout","cancel","flush"],"sourceRoot":""}