{"version":3,"file":"static/js/618.8aef3cfa.chunk.js","mappings":"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","sources":["view/SuperAdmin/Customer/CustomerForm/components/InputInformationFields.js","view/SuperAdmin/Customer/CustomerForm/components/SelectInformationFields.js","view/SuperAdmin/Customer/CustomerForm/index.js","view/SuperAdmin/Customer/EditCustomer/store/dataSlice.js","view/SuperAdmin/Customer/EditCustomer/store/index.js","view/SuperAdmin/Customer/EditCustomer/index.js","services/SuperAdmin/Customer/CustomerService.js"],"sourcesContent":["import React, { memo } from \"react\";\nimport { FormItem, Input } from \"../../../../../components/ui\";\nimport { Field } from \"formik\";\n\nconst InputInformationFields = (props) => {\n  const {\n    errors,\n    touched,\n    label,\n    name,\n    placeholder = \"\",\n    type = \"text\",\n  } = props;\n  return (\n    <FormItem\n      className=\"mb-4\"\n      label={label}\n      invalid={errors && touched}\n      errorMessage={errors}\n    >\n      <Field\n        type={\"text\"}\n        autoComplete=\"off\"\n        name={name}\n        placeholder={placeholder}\n        component={Input}\n      />\n    </FormItem>\n  );\n};\n\nexport default memo(InputInformationFields);\n","import React, { memo } from 'react'\nimport { FormItem, Select } from '../../../../../components/ui'\nimport { Field } from 'formik'\n\nconst SelectInformationFields = (props) => {\n    const { errors, touched, name, data, values, label } = props\n    return (\n        <FormItem\n            className='mb-3'\n            label={label}\n            invalid={errors && touched}\n            errorMessage={errors}\n        >\n            <Field name={name}>\n                {({ field, form }) => (\n                    <Select\n                        field={field}\n                        form={form}\n                        options={data}\n                        value={data.filter(\n                            (item) =>\n                                item.value === values\n                        )}\n                        onChange={(option) =>\n                            form.setFieldValue(\n                                field.name,\n                                option.value\n                            )\n                        }\n                    />\n                )}\n            </Field>\n        </FormItem>\n    )\n}\n\nexport default memo(SelectInformationFields)","import React, { forwardRef, useState } from 'react'\nimport { FormContainer, Button, Card } from '../../../../components/ui'\nimport { StickyFooter, ConfirmDialog } from '../../../../components/shared'\nimport { Form, Formik } from 'formik'\nimport cloneDeep from 'lodash/cloneDeep'\nimport { HiOutlineTrash } from 'react-icons/hi'\nimport { AiOutlineSave } from 'react-icons/ai'\nimport * as Yup from 'yup'\nimport InputInformationFields from './components/InputInformationFields'\nimport SelectInformationFields from './components/SelectInformationFields'\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required('Required'),\n  code: Yup.string().required('Required'),\n  status: Yup.boolean().required('Required'),\n  type: Yup.string().required('Required'),\n  city: Yup.string(),\n  // email: Yup.email().typeError(\"It should be a email\"),\n  mobile: Yup.string().required('Required'),\n  phone: Yup.string().required('Required'),\n  gst_no: Yup.string(),\n  CustomerPermanentAddress: Yup.object().shape({\n    address: Yup.string().required('Required'),\n    country: Yup.string().required('Required'),\n    city: Yup.string().required('Required'),\n    zip_code: Yup.number().required('Required'),\n    state: Yup.string().required('Required')\n  })\n})\n\nexport const customerType = [\n  { label: 'Customer', value: 'customer' },\n  { label: 'Supplier', value: 'supplier' },\n  { label: 'Both', value: 'both' }\n]\nexport const customerStatus = [\n  { label: 'Active', value: true },\n  { label: 'In-Active', value: false }\n]\n\nconst DeleteProductButton = ({ onDelete, onLoading, type }) => {\n  const [dialogOpen, setDialogOpen] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  const onConfirmDialogOpen = () => {\n    setDialogOpen(true)\n  }\n\n  const onConfirmDialogClose = () => {\n    setDialogOpen(false)\n  }\n\n  const handleConfirm = () => {\n    setLoading(true)\n    onDelete?.({ setDialogOpen, setLoading })\n  }\n\n  return (\n    <>\n      <Button\n        className=\"text-red-600\"\n        variant=\"plain\"\n        size=\"sm\"\n        icon={<HiOutlineTrash className=\"mr-1\" />}\n        type=\"button\"\n        onClick={onConfirmDialogOpen}\n      >\n        Delete\n      </Button>\n      <ConfirmDialog\n        isOpen={dialogOpen}\n        onClose={onConfirmDialogClose}\n        onRequestClose={onConfirmDialogClose}\n        type=\"danger\"\n        title={<div className=\"capitalize\">Delete {type}</div>}\n        loading={loading}\n        onCancel={onConfirmDialogClose}\n        onConfirm={handleConfirm}\n        confirmButtonColor=\"red-600\"\n      >\n        <p>Are you sure you want to delete? This action cannot be undone.</p>\n      </ConfirmDialog>\n    </>\n  )\n}\n\nconst CustomerForm = forwardRef((props, ref) => {\n  const { type, initialData, onFormSubmit, onDiscard, onDelete } = props\n\n  return (\n    <Formik\n      enableReinitialize={true}\n      innerRef={ref}\n      initialValues={{\n        ...initialData\n      }}\n      validationSchema={validationSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        const formData = cloneDeep(values)\n        onFormSubmit?.(formData, setSubmitting)\n      }}\n    >\n      {({ values, touched, errors, isSubmitting }) => (\n        <Form>\n          <FormContainer>\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n              <div className=\"lg:col-span-1\">\n                <Card\n                  divider\n                  className=\"bg-pink-50 mb-4\"\n                >\n                  <h5>Basic Information</h5>\n                  <p className=\"mb-4\">\n                    Section to config basic customer/supplier information\n                  </p>\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <InputInformationFields\n                      errors={errors?.name}\n                      touched={touched?.name}\n                      placeholder=\"Customer/Supplier\"\n                      label=\"Customer/Supplier\"\n                      name=\"name\"\n                    />\n                    <SelectInformationFields\n                      errors={errors?.status}\n                      touched={touched?.status}\n                      name=\"status\"\n                      data={customerStatus}\n                      values={values.status}\n                      label=\"Status\"\n                    />\n                    <SelectInformationFields\n                      errors={errors?.type}\n                      touched={touched?.type}\n                      name=\"type\"\n                      data={customerType}\n                      values={values.type}\n                      label=\"Type\"\n                    />\n                    <InputInformationFields\n                      errors={errors?.mobile}\n                      touched={touched?.mobile}\n                      placeholder=\"Mobile\"\n                      label=\"mobile\"\n                      name=\"mobile\"\n                      type=\"number\"\n                    />\n                    <InputInformationFields\n                      errors={errors?.email}\n                      touched={touched?.email}\n                      placeholder=\"Email\"\n                      label=\"Email\"\n                      name=\"email\"\n                    />\n                    <InputInformationFields\n                      errors={errors?.phone}\n                      touched={touched?.phone}\n                      placeholder=\"Phone\"\n                      label=\"Phone\"\n                      name=\"phone\"\n                    />\n                    <InputInformationFields\n                      errors={errors?.code}\n                      touched={touched?.code}\n                      placeholder=\"Customer Code\"\n                      label=\"Customer Code\"\n                      name=\"code\"\n                    />\n                    <InputInformationFields\n                      placeholder=\"Vender Code\"\n                      label=\"Vender Code\"\n                      name=\"vender_code\"\n                    />\n                  </div>\n                </Card>\n                <Card className=\"bg-emerald-50\">\n                  <h5>Other Information</h5>\n                  <p className=\"mb-4\">Section to config other information</p>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <InputInformationFields\n                      errors={errors?.gst_no}\n                      touched={touched?.gst_no}\n                      placeholder=\"GST No\"\n                      label=\"GST Number\"\n                      name=\"gst_no\"\n                    />\n                    <InputInformationFields\n                      errors={errors?.pan}\n                      touched={touched?.pan}\n                      placeholder=\"PAN Number\"\n                      label=\"PAN Number\"\n                      name=\"pan\"\n                    />\n                  </div>\n                </Card>\n              </div>\n              <div className=\"lg:col-span-1\">\n                <Card className=\"bg-emerald-50\">\n                  <h5>Permanent Address Information</h5>\n                  <p className=\"mb-4\">\n                    Section to config permanent address information\n                  </p>\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"col-span-2\">\n                      <InputInformationFields\n                        errors={errors.CustomerPermanentAddress?.address}\n                        touched={touched.CustomerPermanentAddress?.address}\n                        placeholder=\"Full Address\"\n                        label=\"Full Address\"\n                        name=\"CustomerPermanentAddress.address\"\n                      />\n                    </div>\n                    <InputInformationFields\n                      errors={errors.CustomerPermanentAddress?.country}\n                      touched={touched.CustomerPermanentAddress?.country}\n                      placeholder=\"Country\"\n                      label=\"Country\"\n                      name=\"CustomerPermanentAddress.country\"\n                    />\n                    <InputInformationFields\n                      errors={errors.CustomerPermanentAddress?.state}\n                      touched={touched.CustomerPermanentAddress?.state}\n                      placeholder=\"State\"\n                      label=\"State\"\n                      name=\"CustomerPermanentAddress.state\"\n                    />\n                    <InputInformationFields\n                      errors={errors.CustomerPermanentAddress?.state_code}\n                      touched={touched.CustomerPermanentAddress?.state_code}\n                      placeholder=\"State Code\"\n                      label=\"State Code\"\n                      name=\"CustomerPermanentAddress.state_code\"\n                    />\n                    <InputInformationFields\n                      errors={errors.CustomerPermanentAddress?.city}\n                      touched={touched.CustomerPermanentAddress?.city}\n                      placeholder=\"City\"\n                      label=\"City\"\n                      name=\"CustomerPermanentAddress.city\"\n                    />\n                    <InputInformationFields\n                      errors={errors.CustomerPermanentAddress?.zip_code}\n                      touched={touched.CustomerPermanentAddress?.zip_code}\n                      placeholder=\"Zip code\"\n                      label=\"Zip code\"\n                      name=\"CustomerPermanentAddress.zip_code\"\n                    />\n                  </div>\n                </Card>\n              </div>\n            </div>\n            <StickyFooter\n              className=\"-mx-8 px-8 flex items-center justify-between py-4\"\n              stickyClass=\"border-t bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\"\n            >\n              {/* <div>\n                                    {type === 'edit' && (\n                                        <DeleteProductButton\n                                            onDelete={onDelete}\n                                            type={values.type}\n                                        />\n                                    )}\n                                </div> */}\n              <div className=\"md:flex items-center\">\n                <Button\n                  size=\"sm\"\n                  className=\"mr-3\"\n                  onClick={() => onDiscard?.()}\n                  type=\"button\"\n                >\n                  Discard\n                </Button>\n                <Button\n                  size=\"sm\"\n                  variant=\"solid\"\n                  loading={isSubmitting}\n                  icon={<AiOutlineSave className=\"mr-1\" />}\n                  type=\"submit\"\n                >\n                  {type === 'edit' ? 'Update' : 'Save'}\n                </Button>\n              </div>\n            </StickyFooter>\n          </FormContainer>\n        </Form>\n      )}\n    </Formik>\n  )\n})\n\nCustomerForm.defaultProps = {\n  type: 'edit',\n  initialData: {\n    customer_id: '',\n    name: '',\n    status: '',\n    mobile: '',\n    email: '',\n    code: '',\n    vender_code: '',\n    CustomerPermanentAddress: {\n      address: '',\n      country: '',\n      city: '',\n      zip_code: '',\n      state: '',\n      state_code: ''\n    },\n    gst_no: '',\n    pan: '',\n    type: ''\n  }\n}\n\nexport default CustomerForm\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport {\n  apiUpdateCustomer,\n  apiGetCustomerDetailsByCustomerId,\n} from \"../../../../../services/SuperAdmin/Customer/CustomerService\";\n\nexport const updateCustomer = createAsyncThunk(\n  \"customer/edit/data/customer\",\n  async (data) => {\n    try {\n      const response = await apiUpdateCustomer(data);\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nexport const getCustomerDetails = createAsyncThunk(\n  \"customer/get/data/customer\",\n  async (data) => {\n    try {\n      const response = await apiGetCustomerDetailsByCustomerId(data);\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nconst dataSlice = createSlice({\n  name: \"customer/edit/data\",\n  initialState: {\n    customerDetails: {},\n  },\n  reducers: {},\n  extraReducers: {\n    [updateCustomer.fulfilled]: (state) => {},\n    [getCustomerDetails.fulfilled]: (state, action) => {\n      state.customerDetails = action.payload.data.data || {};\n    },\n  },\n});\n\nexport default dataSlice.reducer;\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport data from \"./dataSlice\";\nconst EditCustomerReducer = combineReducers({\n  data,\n});\n\nexport default EditCustomerReducer;\n","import React, { useEffect } from 'react'\nimport { Toast, Notification } from '../../../../components/ui'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { injectReducer } from '../../../../store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateCustomer, getCustomerDetails } from './store/dataSlice'\nimport EditCustomerReducer from './store'\nimport CustomerForm from '../CustomerForm'\n\ninjectReducer('edit_customer', EditCustomerReducer)\n\nconst pushNotification = (message, title, type) => {\n  return Toast.push(\n    <Notification\n      title={title}\n      type={type}\n      duration={2500}\n    >\n      {message}\n    </Notification>,\n    {\n      placement: 'top-center'\n    }\n  )\n}\n\nconst NewCustomer = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const customer_id = location.pathname.substring(\n    location.pathname.lastIndexOf('/') + 1\n  )\n\n  const initialData = useSelector(\n    (state) => state.edit_customer.data.customerDetails\n  )\n\n  useEffect(() => {\n    const fetchData = () => {\n      dispatch(getCustomerDetails({ customer_id: customer_id }))\n    }\n    fetchData()\n  }, [])\n\n  const handleFormSubmit = async (values, setSubmitting) => {\n    setSubmitting(true)\n    const action = await dispatch(updateCustomer(values))\n    setSubmitting(false)\n    if (action.payload?.status < 300) {\n      navigate(`/customer/list`)\n      return pushNotification(\n        action.payload?.data.message,\n        'Successfully added',\n        'success'\n      )\n    } else\n      return pushNotification(\n        action.payload?.data.message,\n        'Unsuccessfully added',\n        'danger'\n      )\n  }\n\n  const handleDiscard = () => {\n    navigate('/customer/list')\n  }\n\n  return (\n    <CustomerForm\n      type=\"edit\"\n      initialData={{ ...initialData, code: initialData.customer_code }}\n      onFormSubmit={handleFormSubmit}\n      onDiscard={handleDiscard}\n    />\n  )\n}\n\nexport default NewCustomer\n","import ApiService from \"../../ApiService\";\n\nexport async function apiGetCustomerStatisticData() {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/statistic\",\n    method: \"get\",\n  });\n}\n\n// export async function apiDeleteCustomer(data) {\n//   return ApiService.fetchData({\n//     url: \"v1/web/company/customer/delete\",\n//     method: \"delete\",\n//     data,\n//   });\n// }\n\nexport async function apiUpdateCustomerDetails(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/update\",\n    method: \"put\",\n    data,\n  });\n}\n\nexport async function apiGetAllCustomers(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/select\",\n    method: \"get\",\n  });\n}\n\nexport async function apiPostRegisterNewCustomer(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/register\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiUpdateCustomer(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/update/id\",\n    method: \"put\",\n    data,\n  });\n}\nexport async function apiGetCustomersWithPagination(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetCustomerDetailsByCustomerId(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/details/id\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetAllCustomersOption() {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/option\",\n    method: \"get\",\n  });\n}\n\nexport async function apiDeleteCustomer(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/delete/id\",\n    method: \"delete\",\n    data,\n  });\n}\n"],"names":["InputInformationFields","props","errors","touched","label","name","placeholder","type","_jsx","FormItem","className","invalid","errorMessage","children","Field","autoComplete","component","Input","memo","SelectInformationFields","data","values","_ref","field","form","Select","options","value","filter","item","onChange","option","setFieldValue","validationSchema","Yup","shape","required","code","status","city","mobile","phone","gst_no","CustomerPermanentAddress","address","country","zip_code","state","customerType","customerStatus","CustomerForm","forwardRef","ref","initialData","onFormSubmit","onDiscard","onDelete","Formik","enableReinitialize","innerRef","initialValues","onSubmit","_ref2","setSubmitting","formData","cloneDeep","_ref3","_errors$CustomerPerma","_touched$CustomerPerm","_errors$CustomerPerma2","_touched$CustomerPerm2","_errors$CustomerPerma3","_touched$CustomerPerm3","_errors$CustomerPerma4","_touched$CustomerPerm4","_errors$CustomerPerma5","_touched$CustomerPerm5","_errors$CustomerPerma6","_touched$CustomerPerm6","isSubmitting","Form","_jsxs","FormContainer","Card","divider","email","pan","state_code","StickyFooter","stickyClass","Button","size","onClick","variant","loading","icon","AiOutlineSave","defaultProps","customer_id","vender_code","updateCustomer","createAsyncThunk","async","apiUpdateCustomer","error","response","getCustomerDetails","apiGetCustomerDetailsByCustomerId","createSlice","initialState","customerDetails","reducers","extraReducers","fulfilled","action","payload","combineReducers","injectReducer","EditCustomerReducer","pushNotification","message","title","Toast","push","Notification","duration","placement","NewCustomer","dispatch","useDispatch","navigate","useNavigate","location","useLocation","pathname","substring","lastIndexOf","useSelector","edit_customer","useEffect","customer_code","_action$payload","_action$payload3","_action$payload2","handleDiscard","apiGetCustomerStatisticData","ApiService","fetchData","url","method","apiUpdateCustomerDetails","apiGetAllCustomers","apiPostRegisterNewCustomer","apiGetCustomersWithPagination","apiGetAllCustomersOption","apiDeleteCustomer"],"sourceRoot":""}