{"version":3,"file":"static/js/2478.98443db7.chunk.js","mappings":"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","sources":["services/SuperAdmin/DashboardService.js","view/Instruments/Dashboard/store/dataSlice.js","view/Instruments/Dashboard/store/index.js","view/Instruments/Dashboard/components/SummaryCard.js","view/Instruments/Dashboard/components/PieChart.js","view/Instruments/Dashboard/components/MachineTable.js","view/Instruments/Dashboard/index.js"],"sourcesContent":["import ApiService from '../ApiService'\n\nexport async function apiGetDashboardData() {\n  return ApiService.fetchData({\n    url: 'v1/web/company/dashboard',\n    method: 'get'\n  })\n}\n\n//Instruments\nexport async function apiGetInstrumentDashboardData(data) {\n  return ApiService.fetchData({\n    url: 'v1/web/company/instrument/dashboard',\n    method: 'post',\n    data\n  })\n}\n\nexport async function apiGetInstrumentstaticData() {\n  return ApiService.fetchData({\n    url: 'v1/web/company/instrument/dashboard/static',\n    method: 'get'\n  })\n}\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  apiGetInstrumentDashboardData,\n  apiGetInstrumentstaticData\n} from '../../../../services/SuperAdmin/DashboardService'\n\nexport const getInstrumentCalibrationNearToMonth = createAsyncThunk(\n  'instrument/dashboard/data/CalibrationNearToMonth',\n  async (data) => {\n    try {\n      const response = await apiGetInstrumentDashboardData(data)\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nexport const getInstrumentstaticData = createAsyncThunk(\n  'instrument/dashboard/data/static',\n  async (data) => {\n    try {\n      const response = await apiGetInstrumentstaticData()\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nexport const initialTableData = {\n  total: 0,\n  pageIndex: 1,\n  pageSize: 10,\n  query: ''\n}\n\nexport const initialFilterData = {\n  type: ''\n}\n\nconst dataSlice = createSlice({\n  name: 'instrument/dashboard/data',\n  initialState: {\n    loading: false,\n    calibrationNearToDate: [],\n    staticData: {},\n    tableData: initialTableData,\n    filterData: initialFilterData\n  },\n  reducers: {\n    setTableData: (state, action) => {\n      state.tableData = action.payload\n    },\n    setFilterData: (state, action) => {\n      state.filterData = action.payload\n    }\n  },\n  extraReducers: {\n    [getInstrumentCalibrationNearToMonth.fulfilled]: (state, action) => {\n      state.calibrationNearToDate = action.payload.data?.data || []\n      state.tableData.total = action.payload?.data?.total || 0\n      state.loading = false\n    },\n    [getInstrumentCalibrationNearToMonth.pending]: (state) => {\n      state.loading = true\n    },\n    [getInstrumentstaticData.fulfilled]: (state, action) => {\n      state.staticData = action.payload?.data?.data || {}\n    }\n  }\n})\n\nexport const { setTableData, setFilterData } = dataSlice.actions\n\nexport default dataSlice.reducer\n","import { combineReducers } from '@reduxjs/toolkit'\nimport data from './dataSlice'\n\nconst instrumentDashboardReducer = combineReducers({\n  data\n})\n\nexport default instrumentDashboardReducer\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MdOutlineFileUpload } from \"react-icons/md\";\nimport {\n  CalendarOutlined,\n  CheckCircleOutlined,\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\nimport { GrVirtualMachine } from \"react-icons/gr\";\n\nconst Container = styled.div`\n  background-color: white;\n  margin: 10px;\n  padding: 10px;\n  border-radius: 1rem;\n`;\n\nconst Card = styled.div`\n  background-color: ${(props) => props.bgColor};\n  padding: 1.5rem;\n  width: 100%;\n  max-width: 200px;\n  height: 198px;\n  border-radius: 1.25rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst IconContainer = styled.div`\n  background-color: ${(props) => props.iconBgColor};\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Value = styled.p`\n  font-size: 2rem;\n  font-weight: bold;\n  margin-top: 0.75rem;\n`;\n\nconst Label = styled.p`\n  font-size: 0.8rem;\n  font-weight: medium;\n`;\n\nconst SummaryCards = () => {\n  const data = {\n    machines: 50,\n    upcomingMaintenance: 10,\n    overdueMaintenance: 5,\n    upToDate: 35,\n    upcomingCalibrations: 7,\n    overdueCalibrations: 3,\n  };\n\n  return (\n    <Container>\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"25px\" }}>\n        <Card bgColor=\"#FFE2E5\">\n          <IconContainer iconBgColor=\"#FA5A7D\">\n            <GrVirtualMachine\n              style={{\n                color: \"white\",\n                fontSize: \"24px\",\n              }}\n            />\n          </IconContainer>\n          <Value>{data.machines}</Value>\n          <Label>Machines</Label>\n        </Card>\n\n        <Card bgColor=\"#FFF4DE\">\n          <IconContainer iconBgColor=\"#FF947A\">\n            <CalendarOutlined style={{ color: \"white\", fontSize: \"24px\" }} />\n          </IconContainer>\n          <Value>{data.upcomingMaintenance}</Value>\n          <Label>Upcoming Maintenance</Label>\n        </Card>\n\n        <Card bgColor=\"#DCFCE7\">\n          <IconContainer iconBgColor=\"#3CD856\">\n            <ExclamationCircleOutlined\n              style={{ color: \"white\", fontSize: \"24px\" }}\n            />\n          </IconContainer>\n          <Value>{data.overdueMaintenance}</Value>\n          <Label>Overdue Maintenance</Label>\n        </Card>\n\n        <Card bgColor=\"#F3E8FF\">\n          <IconContainer iconBgColor=\"#BF83FF\">\n            <CheckCircleOutlined style={{ color: \"white\", fontSize: \"24px\" }} />\n          </IconContainer>\n          <Value>{data.upToDate}</Value>\n          <Label>Up-to-Date Machines</Label>\n        </Card>\n\n        <Card bgColor=\"#e4eff6\">\n          <IconContainer iconBgColor=\"#096CAE\">\n            <CalendarOutlined style={{ color: \"white\", fontSize: \"24px\" }} />\n          </IconContainer>\n          <Value>{data.upcomingCalibrations}</Value>\n          <Label>Upcoming Calibrations</Label>\n        </Card>\n\n        <Card bgColor=\"#FFF4DE\">\n          <IconContainer iconBgColor=\"#FF947A\">\n            <ExclamationCircleOutlined\n              style={{ color: \"white\", fontSize: \"24px\" }}\n            />\n          </IconContainer>\n          <Value>{data.overdueCalibrations}</Value>\n          <Label>Overdue Calibrations</Label>\n        </Card>\n      </div>\n    </Container>\n  );\n};\n\nexport default SummaryCards;\n","import React from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { Card } from \"antd\";\n\nconst PieChart = () => {\n  const data = {\n    machines: 50,\n    upcomingMaintenance: 10, // Machines with upcoming maintenance\n    overdueMaintenance: 5, // Machines with overdue maintenance\n    upToDate: 35, // Machines that are up-to-date\n    upcomingCalibrations: 7,\n    overdueCalibrations: 3,\n    expenses: [\n      { month: \"Jan\", value: 1200 },\n      { month: \"Feb\", value: 1500 },\n      { month: \"Mar\", value: 1000 },\n      { month: \"Apr\", value: 2000 },\n    ],\n    machineDetails: [\n      {\n        id: 1,\n        name: \"Machine A\",\n        maintenanceStatus: \"Up-to-date\",\n        calibrationStatus: \"Upcoming\",\n        lastMaintenance: \"2024-11-01\",\n        lastCalibration: \"2024-11-15\",\n        expenses: \"$200\",\n      },\n      {\n        id: 2,\n        name: \"Machine B\",\n        maintenanceStatus: \"Overdue\",\n        calibrationStatus: \"Overdue\",\n        lastMaintenance: \"2024-09-01\",\n        lastCalibration: \"2024-08-15\",\n        expenses: \"$500\",\n      },\n    ],\n  };\n\n  const pieChartOptions = {\n    chart: {\n      type: \"pie\",\n    },\n    labels: [\"Up-to-Date\", \"Overdue Maintenance\", \"Upcoming Maintenance\"],\n    colors: [\"#36A2EB\", \"#FF6384\", \"#FFCE56\"],\n    legend: {\n      position: \"bottom\",\n    },\n  };\n\n  const pieChartData = [\n    data.upToDate,\n    data.overdueMaintenance,\n    data.upcomingMaintenance,\n  ];\n\n  return (\n    <>\n      <h4 className=\"mb-4\">Machine Status Distribution</h4>\n      <ReactApexChart\n        options={pieChartOptions}\n        series={pieChartData}\n        type=\"pie\"\n        height={350}\n      />\n    </>\n  );\n};\n\nexport default PieChart;\n","import React from \"react\";\nimport { Table, Card } from \"antd\";\n\nconst MachineTable = () => {\n  const data = [\n    {\n      id: 1,\n      name: \"Machine A\",\n      maintenanceStatus: \"Up-to-date\",\n      calibrationStatus: \"Upcoming\",\n      lastMaintenance: \"2024-11-01\",\n      lastCalibration: \"2024-11-15\",\n      expenses: \"₹200\",\n    },\n    {\n      id: 2,\n      name: \"Machine B\",\n      maintenanceStatus: \"Overdue\",\n      calibrationStatus: \"Overdue\",\n      lastMaintenance: \"2024-09-01\",\n      lastCalibration: \"2024-08-15\",\n      expenses: \"₹500\",\n    },\n    {\n      id: 3,\n      name: \"Machine C\",\n      maintenanceStatus: \"Upcoming\",\n      calibrationStatus: \"Up-to-date\",\n      lastMaintenance: \"2024-11-10\",\n      lastCalibration: \"2024-11-25\",\n      expenses: \"₹300\",\n    },\n    {\n      id: 4,\n      name: \"Machine D\",\n      maintenanceStatus: \"Overdue\",\n      calibrationStatus: \"Upcoming\",\n      lastMaintenance: \"2024-08-20\",\n      lastCalibration: \"2024-09-10\",\n      expenses: \"₹450\",\n    },\n  ];\n\n  const columns = [\n    {\n      title: \"Machine Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n    },\n    {\n      title: \"Maintenance Status\",\n      dataIndex: \"maintenanceStatus\",\n      key: \"maintenanceStatus\",\n    },\n    {\n      title: \"Calibration Status\",\n      dataIndex: \"calibrationStatus\",\n      key: \"calibrationStatus\",\n    },\n    {\n      title: \"Last Maintenance\",\n      dataIndex: \"lastMaintenance\",\n      key: \"lastMaintenance\",\n    },\n    {\n      title: \"Last Calibration\",\n      dataIndex: \"lastCalibration\",\n      key: \"lastCalibration\",\n    },\n    {\n      title: \"Expenses\",\n      dataIndex: \"expenses\",\n      key: \"expenses\",\n      align: \"right\",\n    },\n  ];\n\n  return (\n    <>\n      <h4 className=\"mb-4\">Machine Details</h4>\n      <Table dataSource={data} columns={columns} rowKey=\"id\" bordered />\n    </>\n  );\n};\n\nexport default MachineTable;\n","import React, { useEffect } from \"react\";\nimport { Loading } from \"../../../components/shared\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { injectReducer } from \"../../../store\";\nimport instrumentDashboardReducer from \"./store\";\n// import CalibrationNearToDate from './components/calibrationNearToDate'\nimport { Card } from \"../../../components/ui\";\n// import CalibrationPieChart from './components/CalibrationPieChart'\nimport { getInstrumentstaticData } from \"./store/dataSlice\";\nimport SummaryCards from \"./components/SummaryCard\";\nimport PieChart from \"./components/PieChart\";\nimport MachineTable from \"./components/MachineTable\";\n// import Statistic from './components/Statistic'\n\ninjectReducer(\"instrument_dashboard\", instrumentDashboardReducer);\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getInstrumentstaticData());\n  }, []);\n\n  const data = useSelector(\n    (state) => state.instrument_dashboard.data.staticData\n  );\n  return (\n    <Loading loading={false}>\n      {/* <Statistic data={data} /> */}\n      <SummaryCards />\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 mt-4\">\n        <Card className=\"\">\n          {/* <CalibrationNearToDate /> */}\n          <PieChart />\n        </Card>\n        <Card className=\"col-span-2\">\n          {/* <CalibrationPieChart data={data?.pieChartData} /> */}\n\n          <MachineTable />\n        </Card>\n        {/* <LatestDispatch data={data?.dispatchList} className=\"lg:col-span-2 h-max\" /> */}\n      </div>\n    </Loading>\n  );\n};\n\nexport default Dashboard;\n"],"names":["async","apiGetDashboardData","ApiService","fetchData","url","method","apiGetInstrumentDashboardData","data","apiGetInstrumentstaticData","getInstrumentCalibrationNearToMonth","createAsyncThunk","error","response","getInstrumentstaticData","dataSlice","createSlice","name","initialState","loading","calibrationNearToDate","staticData","tableData","total","pageIndex","pageSize","query","filterData","type","reducers","setTableData","state","action","payload","setFilterData","extraReducers","fulfilled","_action$payload$data","_action$payload","_action$payload$data2","pending","_action$payload2","_action$payload2$data","actions","combineReducers","Container","styled","div","Card","props","bgColor","IconContainer","iconBgColor","Value","p","Label","SummaryCards","_jsx","children","_jsxs","style","display","flexWrap","gap","GrVirtualMachine","color","fontSize","CalendarOutlined","ExclamationCircleOutlined","CheckCircleOutlined","PieChart","pieChartData","_Fragment","className","ReactApexChart","options","chart","labels","colors","legend","position","series","height","MachineTable","Table","dataSource","id","maintenanceStatus","calibrationStatus","lastMaintenance","lastCalibration","expenses","columns","title","dataIndex","key","align","rowKey","bordered","injectReducer","instrumentDashboardReducer","Dashboard","dispatch","useDispatch","useEffect","useSelector","instrument_dashboard","Loading"],"sourceRoot":""}