{"version":3,"file":"static/js/2061.54f4956a.chunk.js","mappings":"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","sources":["view/SuperAdmin/QualityControl/store/dataSlice.js","services/SuperAdmin/QualityControl/QualityControlService.js","view/SuperAdmin/QualityControl/components/CustomerInformation.js","view/SuperAdmin/QualityControl/components/ProductInformation.js","view/SuperAdmin/QualityControl/store/index.js","view/SuperAdmin/QualityControl/components/QualityItemDialog.js","view/SuperAdmin/QualityControl/components/ItemTable.js","view/SuperAdmin/QualityControl/index.js","services/SuperAdmin/Customer/CustomerService.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport {\n  apiGetProductsByCustomerId,\n  apiGetQualityControl,\n} from \"../../../../services/SuperAdmin/QualityControl/QualityControlService\";\nimport { apiGetAllCustomers } from \"../../../../services/SuperAdmin/Customer/CustomerService\";\n\nexport const getQualityControl = createAsyncThunk(\n  \"quality/lists/data/\",\n  async (data) => {\n    try {\n      const response = await apiGetQualityControl(data);\n      return response;\n    } catch (error) {\n      return error.response;\n    }\n  }\n);\n\nexport const getAllCustomers = createAsyncThunk(\n  \"quality/lists/data/customer\",\n  async (data) => {\n    try {\n      const response = await apiGetAllCustomers(data);\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nexport const getProductsByCustomerId = createAsyncThunk(\n  \"quality/product/data/customer/id\",\n  async (data) => {\n    try {\n      const response = await apiGetProductsByCustomerId(data);\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nexport const initialTableData = {\n  total: 0,\n  pageIndex: 1,\n  pageSize: 10,\n  query: \"\",\n  customer: \"\",\n};\n\nexport const initialFilterData = {\n  status: \"\",\n};\n\nconst dataSlice = createSlice({\n  name: \"po/lists/data\",\n  initialState: {\n    customersList: [],\n    qualityLists: [],\n    productsList: [],\n    loading: false,\n    tableData: initialTableData,\n    filterData: initialFilterData,\n    attachmentDialog: false,\n    viewDialog: false,\n    selectedQuality: {},\n  },\n  reducers: {\n    setTableData: (state, action) => {\n      state.tableData = action.payload;\n    },\n    setFilterData: (state, action) => {\n      state.filterData = action.payload;\n    },\n    toggleAttachmentDialog: (state, action) => {\n      state.attachmentDialog = action.payload;\n    },\n    toggleViewDialog: (state, action) => {\n      state.viewDialog = action.payload;\n    },\n    setSelectedQuality: (state, action) => {\n      state.selectedQuality = action.payload;\n    },\n    setAllFilterData: (state, action) => {\n      state.customers = [];\n    },\n  },\n  extraReducers: {\n    [getQualityControl.fulfilled]: (state, action) => {\n      state.tableData.total = action.payload.data.total || 0;\n      state.loading = false;\n      state.qualityLists = action.payload.data?.data || [];\n    },\n    [getQualityControl.pending]: (state, action) => {\n      state.loading = true;\n    },\n\n    [getAllCustomers.fulfilled]: (state, action) => {\n      state.tableData.total = action.payload.data.total || 0;\n      state.loading = false;\n      state.customersList = action.payload.data?.data || [];\n    },\n    [getAllCustomers.pending]: (state, action) => {\n      state.loading = true;\n    },\n\n    [getProductsByCustomerId.fulfilled]: (state, action) => {\n      state.tableData.total = action.payload.data.total || 0;\n      state.loading = false;\n      state.productsList = action.payload.data?.data || [];\n    },\n    [getProductsByCustomerId.pending]: (state, action) => {\n      state.loading = true;\n    },\n  },\n});\n\nexport const {\n  setFilterData,\n  setTableData,\n  toggleAttachmentDialog,\n  setSelectedPoList,\n  toggleViewDialog,\n  setAllFilterData,\n} = dataSlice.actions;\n\nexport default dataSlice.reducer;\n","import ApiService from \"../../ApiService\";\n\nexport async function apiGetQualityControl(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/quality/lists\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetProductsByCustomerId(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/quality/select/customer/id\",\n    method: \"post\",\n    data,\n  });\n}\n","import React, { memo, useCallback, useEffect, useMemo } from \"react\";\nimport { Card, FormItem, Select } from \"../../../../components/ui\";\nimport { Field } from \"formik\";\nimport { isEmpty } from \"lodash\";\nimport { useDispatch } from \"react-redux\";\nimport { getProductsByCustomerId, getQualityControl } from \"../store/dataSlice\";\n\nconst CustomerInformation = (props) => {\n  const { errors, values, touched, customers = [], setFieldValue } = props;\n\n  const dispatch = useDispatch();\n\n  const customerData = useMemo(() => {\n    return customers.map((customer) => {\n      return { label: customer.name, value: customer };\n    });\n  }, [customers]);\n\n  const fetchList = useCallback(async () => {\n    if (values) {\n      dispatch(\n        getProductsByCustomerId({\n          customer_id: values?.customer_id,\n        })\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values]);\n\n  useEffect(() => {\n    if (values?.customer_id) {\n      fetchList();\n    }\n  }, [values?.customer_id]);\n\n  return (\n    <FormItem\n      className=\"mb-5 h-max\"\n      label={\n        <span className=\"text-gray-600 font-semibold mt-2\">\n          Customer Information\n        </span>\n      }\n      invalid={errors && touched}\n      errorMessage={errors}\n    >\n      <Field name=\"CustomerDetails\">\n        {({ field, form }) => (\n          <Select\n            field={field}\n            form={form}\n            options={customerData}\n            value={customerData.find(\n              (customer) => customer.value === field.value\n            )}\n            onChange={(option) => form.setFieldValue(field.name, option.value)}\n            className=\"text-gray-500 font-regular\"\n            styles={{\n              control: (provided) => ({\n                ...provided,\n                minHeight: \"45px\", // set desired height\n                height: \"45px\",\n                fontFamily: \"'Inter', sans-serif\",\n                color: \"#576373\",\n              }),\n              option: (provided, state) => ({\n                ...provided,\n                fontSize: \"14px\",\n                fontFamily: \"'Inter', sans-serif\",\n                color: \"#576373\",\n                backgroundColor: state.isFocused ? \"#F3F4F6\" : \"white\", // Optional hover effect\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                fontSize: \"14px\",\n                fontFamily: \"'Inter', sans-serif\",\n                color: \"#576373\",\n              }),\n              menu: (provided) => ({\n                ...provided,\n                fontFamily: \"'Inter', sans-serif\",\n              }),\n              placeholder: (provided) => ({\n                ...provided,\n                color: \"#576373\",\n                fontFamily: \"'Inter', sans-serif\",\n              }),\n            }}\n          />\n        )}\n      </Field>\n      {/* {!isEmpty(values) ? (\n        <Card className=\"mt-2\">\n          <div className=\"flex justify-between\">\n            <strong>Customer Code :</strong>{\" \"}\n            <span>{values?.customer_code || \"-\"}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <strong>Vender Code :</strong>{\" \"}\n            <span>{values?.vender_code || \"-\"}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <strong>Mobile :</strong> <span>{values?.mobile || \"-\"}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <strong>Phone :</strong> <span>{values?.phone || \"-\"}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <strong>Email :</strong> <span>{values?.email || \"-\"}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <strong>PAN No :</strong> <span>{values?.pan || \"-\"}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <strong>GST No :</strong> <span>{values?.gst_no || \"-\"}</span>\n          </div>\n        </Card>\n      ) : null} */}\n    </FormItem>\n  );\n};\n\nexport default memo(CustomerInformation);\n","import React, { memo, useCallback, useEffect, useMemo } from \"react\";\nimport { Card, FormItem, Select } from \"../../../../components/ui\";\nimport { Field } from \"formik\";\nimport { isEmpty } from \"lodash\";\nimport { useDispatch } from \"react-redux\";\nimport { getQualityControl } from \"../store/dataSlice\";\n\nconst ProductInformation = (props) => {\n  const { errors, values, touched, products = [], setFieldValue } = props;\n  const dispatch = useDispatch();\n\n  console.log(\"products\", products);\n\n  const fetchData = useCallback(async () => {\n    dispatch(getQualityControl({ product_id: values?.product_id }));\n  });\n  const productData = useMemo(() => {\n    const productData = [];\n    products.forEach((item) => {\n      item.Products.forEach((product) => {\n        productData.push({\n          label: product.name,\n          value: product.product_id,\n        });\n      });\n    });\n\n    return productData;\n  }, [products]);\n\n  const productCustomerMap = useMemo(() => {\n    const map = {};\n    products.forEach((item) => {\n      const customerId = item.Customer?.customer_id;\n      item.Products.forEach((product) => {\n        map[product.product_id] = customerId;\n      });\n    });\n    return map;\n  }, [products]);\n\n  //   const fetchPoList = useCallback(async () => {\n  //     setFieldValue?.(\"DispatchShippingAddress\", null);\n  //     setFieldValue?.(\"DispatchShippingDetails\", null);\n  //     if (values) {\n  //       dispatch(\n  //         getAllPosByCustomerId({\n  //           customer_id: values?.customer_id,\n  //           currency_type: \"INR\",\n  //         })\n  //       );\n  //       dispatch(\n  //         getAllShippingAddressByCustomerId({\n  //           customer_id: values?.customer_id || \"\",\n  //         })\n  //       );\n  //     }\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\n  //   }, [values]);\n\n  //   useEffect(() => {\n  //     fetchPoList();\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\n  //   }, [values]);\n\n  return (\n    <FormItem\n      className=\"mb-5 h-max\"\n      label={\n        <span className=\"text-gray-600 font-semibold mt-2\">\n          Product Information\n        </span>\n      }\n      invalid={errors && touched}\n      errorMessage={errors}\n    >\n      <Field name=\"ProductDetails\">\n        {({ field, form }) => (\n          <Select\n            field={field}\n            form={form}\n            options={productData}\n            value={productData.find((product) => product.value === field.value)}\n            onChange={(option) => {\n              const customerId = productCustomerMap[option.value];\n              form.setFieldValue(field.name, option.value);\n              dispatch(\n                getQualityControl({\n                  product_id: option.value,\n                  customer_id: customerId,\n                })\n              );\n            }}\n            className=\"text-gray-500 font-regular\"\n            styles={{\n              control: (provided) => ({\n                ...provided,\n                minHeight: \"45px\", // set desired height\n                height: \"45px\",\n                fontFamily: \"'Inter', sans-serif\",\n                color: \"#576373\",\n              }),\n              option: (provided, state) => ({\n                ...provided,\n                fontSize: \"14px\",\n                fontFamily: \"'Inter', sans-serif\",\n                color: \"#576373\",\n                backgroundColor: state.isFocused ? \"#F3F4F6\" : \"white\", // Optional hover effect\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                fontSize: \"14px\",\n                fontFamily: \"'Inter', sans-serif\",\n                color: \"#576373\",\n              }),\n              menu: (provided) => ({\n                ...provided,\n                fontFamily: \"'Inter', sans-serif\",\n              }),\n              placeholder: (provided) => ({\n                ...provided,\n                color: \"#576373\",\n                fontFamily: \"'Inter', sans-serif\",\n              }),\n            }}\n          />\n        )}\n      </Field>\n      {/* {!isEmpty(values) ? (\n        <Card className=\"mt-2\">\n          <div className=\"flex justify-between\">\n            <strong>product Code :</strong>{\" \"}\n            <span>{values?.customer_code || \"-\"}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <strong>Vender Code :</strong>{\" \"}\n            <span>{values?.vender_code || \"-\"}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <strong>Mobile :</strong> <span>{values?.mobile || \"-\"}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <strong>Phone :</strong> <span>{values?.phone || \"-\"}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <strong>Email :</strong> <span>{values?.email || \"-\"}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <strong>PAN No :</strong> <span>{values?.pan || \"-\"}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <strong>GST No :</strong> <span>{values?.gst_no || \"-\"}</span>\n          </div>\n        </Card>\n      ) : null} */}\n    </FormItem>\n  );\n};\n\nexport default memo(ProductInformation);\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport data from \"./dataSlice\";\nconst qualityReducer = combineReducers({\n  data,\n});\n\nexport default qualityReducer;\n","import React, { useState } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Typography,\n  Box,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n} from \"@mui/material\";\nimport { FormItem } from \"../../../../components/ui\";\nimport { Field } from \"formik\";\n\nconst QualityItemDialog = ({ isOpen, onClose, onSubmit, data = [] }) => {\n  const [selectedPONumber, setSelectedPONumber] = useState(\"\");\n  const [selectedSerialNumber, setSelectedSerialNumber] = useState(\"\");\n  const [serialOptions, setSerialOptions] = useState([]);\n\n  const handlePONumberChange = (event, form) => {\n    const value = event.target.value;\n    setSelectedPONumber(value);\n    setSelectedSerialNumber(\"\");\n\n    const matchingSerials = data\n      .filter((d) => d.number === value)\n      .map((d) => d.serial_number);\n\n    setSerialOptions(matchingSerials);\n  };\n\n  const handleSerialChange = (event, form) => {\n    const value = event.target.value;\n    setSelectedSerialNumber(value);\n  };\n\n  const handleSubmit = async (e) => {\n    try {\n      e.preventDefault();\n\n      if (selectedPONumber && selectedSerialNumber) {\n        const selectedItem = data.find(\n          (d) =>\n            d.number === selectedPONumber &&\n            d.serial_number === selectedSerialNumber\n        );\n\n        if (selectedItem) {\n          const itemToAdd = {\n            project_number: selectedItem.project_no,\n            po_number: selectedItem.number,\n            po_serial_number: selectedItem.serial_number,\n            drawing_number: selectedItem.drawing_number,\n            quantity: selectedItem.quantity,\n          };\n\n          console.log(\"Submitting item:\", itemToAdd); // ✅ Add this log\n          onSubmit(itemToAdd);\n\n          setSelectedPONumber(\"\");\n          setSelectedSerialNumber(\"\");\n          setSerialOptions([]);\n\n          onClose();\n        }\n      }\n    } catch (err) {\n      console.error(\"Error in handleSubmit:\", err);\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  const uniquePONumbers = [...new Set(data.map((item) => item.number))];\n\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={onClose}\n      maxWidth=\"sm\"\n      fullWidth\n      PaperProps={{\n        sx: {\n          mt: \"-100px\",\n          height: \"350px\",\n          overflow: \"hidden\",\n        },\n      }}\n    >\n      <DialogTitle sx={{ fontWeight: 600, fontSize: \"1.25rem\" }}>\n        Add Item Information\n      </DialogTitle>\n\n      <DialogContent>\n        <Typography variant=\"body2\" sx={{ mb: 4 }}>\n          Section to configure item information\n        </Typography>\n\n        <Box display=\"flex\" gap={2}>\n          <Box flex={1}>\n            <FormControl fullWidth>\n              <InputLabel sx={{ fontSize: \"0.9rem\", color: \"#666\" }}>\n                PO Number\n              </InputLabel>\n              <Select\n                value={selectedPONumber}\n                onChange={handlePONumberChange}\n                label=\"PO Number\"\n                sx={{\n                  fontSize: \"1rem\",\n                  color: \"#666\",\n                  height: 50,\n                  \"& .MuiSelect-select\": {\n                    padding: \"10px 14px\",\n                  },\n                }}\n                MenuProps={{\n                  PaperProps: {\n                    style: {\n                      maxHeight: 150,\n                    },\n                  },\n                }}\n              >\n                {uniquePONumbers.length > 0 ? (\n                  uniquePONumbers.map((po) => (\n                    <MenuItem\n                      key={po}\n                      value={po}\n                      sx={{ fontSize: \"0.9rem\", color: \"#666\" }}\n                    >\n                      {po}\n                    </MenuItem>\n                  ))\n                ) : (\n                  <MenuItem\n                    disabled\n                    sx={{ fontSize: \"0.85rem\", color: \"#999\" }}\n                  >\n                    No options\n                  </MenuItem>\n                )}\n              </Select>\n            </FormControl>\n          </Box>\n\n          <Box flex={1}>\n            <FormControl fullWidth size=\"medium\">\n              <InputLabel sx={{ fontSize: \"0.9rem\", color: \"#666\" }}>\n                PO Serial Number\n              </InputLabel>\n              <Select\n                value={selectedSerialNumber}\n                onChange={handleSerialChange}\n                label=\"PO Serial Number\"\n                sx={{\n                  fontSize: \"1rem\",\n                  color: \"#666\",\n                  height: 50,\n                  \"& .MuiSelect-select\": {\n                    padding: \"10px 14px\",\n                  },\n                }}\n                MenuProps={{\n                  PaperProps: {\n                    style: {\n                      maxHeight: 150,\n                    },\n                  },\n                }}\n              >\n                {serialOptions.length > 0 ? (\n                  serialOptions.map((serial) => (\n                    <MenuItem\n                      key={serial}\n                      value={serial}\n                      sx={{ fontSize: \"0.9rem\", color: \"#666\" }}\n                    >\n                      {serial}\n                    </MenuItem>\n                  ))\n                ) : (\n                  <MenuItem\n                    disabled\n                    sx={{ fontSize: \"0.85rem\", color: \"#999\" }}\n                  >\n                    No options\n                  </MenuItem>\n                )}\n              </Select>\n            </FormControl>\n          </Box>\n        </Box>\n      </DialogContent>\n\n      <DialogActions sx={{ px: 3, pb: 2 }}>\n        <Button onClick={onClose} variant=\"outlined\" color=\"inherit\">\n          Discard\n        </Button>\n        <Button\n          type=\"button\"\n          onClick={handleSubmit}\n          variant=\"contained\"\n          sx={{ bgcolor: \"#4A3AFF\" }}\n        >\n          Add Item\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default QualityItemDialog;\n","import {\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport React, { memo, useEffect, useMemo, useState } from \"react\";\nimport { Table } from \"../../../../components/ui\";\nimport dayjs from \"dayjs\";\nimport { HiOutlinePencil, HiOutlineTrash } from \"react-icons/hi\";\n\nimport { useDispatch } from \"react-redux\";\n\nconst { Tr, Th, Td, THead, TBody, TFoot } = Table;\n\nconst ActionColumn = ({ row, qualityItems, setQualityItems }) => {\n  const dispatch = useDispatch();\n  //   const onEdit = () => {\n  //     dispatch(toggleEditDispatchItemDialog(true));\n  //     dispatch(setSelectedDispatchItem(row));\n  //   };\n\n  const onDelete = () => {\n    const updatedData = qualityItems.filter((item) => item !== row);\n    setQualityItems(updatedData);\n  };\n\n  return (\n    <div className=\"flex justify-center text-lg gap-x-4\">\n      {/* <span\n        className=\"cursor-pointer hover:text-blue-500\"\n        //   onClick={onEdit}\n      >\n        <HiOutlinePencil />\n      </span> */}\n\n      {qualityItems.length > 1 && (\n        <span\n          className=\"cursor-pointer hover:text-red-500 text-gray-600\"\n          onClick={onDelete}\n        >\n          <HiOutlineTrash />\n        </span>\n      )}\n    </div>\n  );\n};\n\nconst ItemTable = ({ initialData = [], setQualityItems }) => {\n  const columns = useMemo(() => {\n    return [\n      {\n        header: <span className=\"text-gray-500\">Po no. and serial number</span>,\n        accessorKey: \"PoList\",\n        cell: (props) => {\n          const row = props.row.original;\n          return (\n            <div className=\"uppercase text-center text-gray-500\">\n              {`${row?.Po.number}-${row?.PoList?.serial_number}`}\n            </div>\n          );\n        },\n      },\n      {\n        header: \"Project number\",\n        accessorKey: \"project_no\",\n        cell: (props) => {\n          const row = props.row.original;\n          return (\n            <div className=\"uppercase text-center text-gray-500\">\n              {row?.project_no}\n            </div>\n          );\n        },\n      },\n      {\n        header: \"Drawing number\",\n        accessorKey: \"drawing_number\",\n        cell: (props) => {\n          const row = props.row.original;\n          return (\n            <div className=\"uppercase text-center text-gray-500\">\n              {row?.drawing_number}\n            </div>\n          );\n        },\n      },\n      {\n        header: \"Quantity\",\n        accessorKey: \"PoList.quantity\",\n        cell: (props) => {\n          const row = props.row.original;\n          return (\n            <div className=\"uppercase text-center text-gray-500\">\n              {row?.PoList?.quantity}\n            </div>\n          );\n        },\n      },\n      {\n        header: \"\",\n        accessorKey: \"action\",\n        cell: (props) => {\n          const row = props.row.original;\n          return (\n            <ActionColumn\n              row={row}\n              qualityItems={initialData}\n              setQualityItems={setQualityItems}\n            />\n          );\n        },\n      },\n    ];\n  }, [initialData]);\n\n  const table = useReactTable({\n    data: initialData,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <>\n      <Table compact={true}>\n        <THead>\n          {table.getHeaderGroups().map((headerGroup) => (\n            <Tr key={headerGroup.id}>\n              {headerGroup.headers.map((header) => {\n                return (\n                  <Th\n                    style={{\n                      border: \".5px solid #e0e0e0\",\n                      textAlign: \"center\",\n                    }}\n                    className=\"select-none font-medium !text-gray-600\"\n                    key={header.id}\n                    colSpan={header.colSpan}\n                  >\n                    {flexRender(\n                      header.column.columnDef.header,\n                      header.getContext()\n                    )}\n                  </Th>\n                );\n              })}\n            </Tr>\n          ))}\n        </THead>\n        <TBody>\n          {table.getRowModel().rows.map((row) => {\n            return (\n              <Tr key={row.id}>\n                {row.getVisibleCells().map((cell) => {\n                  return (\n                    <Td\n                      key={cell.id}\n                      style={{ border: \".5px solid #e0e0e0\" }}\n                      className=\"select-none font-normal !text-gray-600\"\n                    >\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </Td>\n                  );\n                })}\n              </Tr>\n            );\n          })}\n        </TBody>\n      </Table>\n    </>\n  );\n};\n\nexport default memo(ItemTable);\n","import { Suspense, useEffect, useMemo, useState } from \"react\";\nimport { Loading, StickyFooter } from \"../../../components/shared\";\nimport { Form, Formik } from \"formik\";\nimport { Button, Card } from \"antd\";\nimport { FormContainer, Input } from \"../../../components/ui\";\nimport CustomerInformation from \"./components/CustomerInformation\";\nimport ProductInformation from \"./components/ProductInformation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport qualityReducer from \"./store\";\nimport { injectReducer } from \"../../../store\";\nimport * as Yup from \"yup\";\nimport { getAllCustomers } from \"./store/dataSlice\";\nimport QualityItemDialog from \"./components/QualityItemDialog\";\nimport ItemTable from \"./components/ItemTable\";\n\ninjectReducer(\"quality\", qualityReducer);\n\nconst validationSchema = Yup.object().shape({\n  CustomerDetails: Yup.object().required(\"Required\"),\n  ProductDetails: Yup.object().required(\"Required\"),\n});\n\nconst QualityControl = () => {\n  const dispatch = useDispatch();\n  const [qualityDialogOpen, setQualityDialogOpen] = useState(false);\n  const [qualityItems, setQualityItems] = useState([]);\n\n  console.log(\"qualityItems\", qualityItems);\n\n  const customers = useSelector((state) => state.quality.data?.customersList);\n  const products = useSelector((state) => state.quality.data?.productsList);\n  const qualityData = useSelector((state) => state.quality.data?.qualityLists);\n\n  const dummyData = [\n    {\n      product_id: \"d59a0d7f-0577-4a89-b5cf-f306c8c6bca1\",\n      customer_id: \"e5e50d3a-01a2-408d-b7b7-20d33e22d017\",\n      material_grade_id: \"e2e6901f-df8e-4799-9238-bab23be5f1ea\",\n      po_list_id: \"17cb3a72-fc88-4c8f-849e-6f6c37b02b29\",\n      serial_number: 11,\n      quantity: 1,\n      delivery_date: \"2025-07-15\",\n      accept_delivery_date: \"2025-06-10\",\n      list_status: \"accepted\",\n      project_no: \"679119\",\n      product_name: \"BEARING COVER;MACH;3VG\",\n      drawing_number: \"3-204502283-001\",\n      revision_number: \"g\",\n      material_grade: \"GC300\",\n      item_code: \"204502283002\",\n      number: \"4502307091\",\n      status: \"processing\",\n      DATE: \"2025-04-12\",\n      poa: \"25041802\",\n      customer_name: \"SULZER PUMPS INDIA PVT LTD\",\n      material_tc_verify: null,\n      internal_inspection: null,\n      ndt_requirement: null,\n      final_inspection: null,\n      heat_treatment: null,\n      other: null,\n      item_quantity: 0,\n      material_tc_verify_check: 1,\n      internal_inspection_check: 1,\n      ndt_requirement_check: 0,\n      final_inspection_check: 1,\n      heat_treatment_check: 0,\n      other_check: 0,\n      pending_quantity: 1,\n      invoice_date: null,\n      invoice_no: null,\n      raw_lead_time: 2,\n      raw_lead_time_type: \"weeks\",\n      machine_lead_time: 2,\n      machine_lead_time_type: \"weeks\",\n      quality_lead_time: 2,\n      quality_lead_time_type: \"weeks\",\n      standard_lead_time: 6,\n      standard_lead_time_type: \"weeks\",\n      actual_raw_date: null,\n      actual_quality_date: null,\n      actual_machine_date: null,\n    },\n    {\n      product_id: \"d60a8d0c-1c75-426b-b6fc-07953bb92c2b\",\n      customer_id: \"f9b3a107-4f6e-41c1-b4a9-d6b9d6491d4c\",\n      material_grade_id: \"1c869990-d13b-4296-8614-d85f2e0c00f3\",\n      po_list_id: \"299b7f61-8490-4c5d-961b-356fa2f963fc\",\n      serial_number: 12,\n      quantity: 2,\n      delivery_date: \"2025-08-20\",\n      accept_delivery_date: \"2025-07-18\",\n      list_status: \"pending\",\n      project_no: \"679120\",\n      product_name: \"BEARING COVER;MACH;3VG\",\n      drawing_number: \"3-204502283-002\",\n      revision_number: \"h\",\n      material_grade: \"GC350\",\n      item_code: \"204502283003\",\n      number: \"4502307091\",\n      status: \"processing\",\n      DATE: \"2025-04-13\",\n      poa: \"25041803\",\n      customer_name: \"SULZER PUMPS INDIA PVT LTD\",\n      material_tc_verify: null,\n      internal_inspection: null,\n      ndt_requirement: null,\n      final_inspection: null,\n      heat_treatment: null,\n      other: null,\n      item_quantity: 0,\n      material_tc_verify_check: 1,\n      internal_inspection_check: 1,\n      ndt_requirement_check: 0,\n      final_inspection_check: 1,\n      heat_treatment_check: 0,\n      other_check: 0,\n      pending_quantity: 2,\n      invoice_date: null,\n      invoice_no: null,\n      raw_lead_time: 2,\n      raw_lead_time_type: \"weeks\",\n      machine_lead_time: 2,\n      machine_lead_time_type: \"weeks\",\n      quality_lead_time: 2,\n      quality_lead_time_type: \"weeks\",\n      standard_lead_time: 6,\n      standard_lead_time_type: \"weeks\",\n      actual_raw_date: null,\n      actual_quality_date: null,\n      actual_machine_date: null,\n    },\n  ];\n\n  useEffect(() => {\n    dispatch(getAllCustomers());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleAddItem = (newItem) => {\n    const exists = qualityItems.some(\n      (item) =>\n        item.Po?.number === newItem.po_number &&\n        item.PoList?.serial_number === newItem.po_serial_number\n    );\n\n    if (exists) return;\n\n    const mappedItem = {\n      Po: { number: newItem.po_number },\n      PoList: {\n        serial_number: newItem.po_serial_number,\n        quantity: newItem.quantity,\n      },\n      project_no: newItem.project_number,\n      drawing_number: newItem.drawing_number,\n    };\n\n    setQualityItems((prev) => [...prev, mappedItem]);\n  };\n\n  // const handleAddItem = (newItem) => {\n  //   console.log(\"New Item:\", newItem);\n  //   setQualityItems((prevItems) => {\n  //     const exists = prevItems.some(\n  //       (item) =>\n  //         item.po_number === newItem.po_number &&\n  //         item.po_serial_number === newItem.po_serial_number\n  //     );\n\n  //     if (exists) return prevItems; // Skip if duplicate\n  //     return [...prevItems, newItem];\n  //   });\n  // };\n\n  // const mappedData = useMemo(() => {\n  //   return qualityItems.map((item) => ({\n  //     Po: { number: item.po_number },\n  //     PoList: {\n  //       serial_number: item.po_serial_number,\n  //       quantity: item.quantity,\n  //     },\n  //     project_no: item.project_number,\n  //     drawing_number: item.drawing_number,\n  //   }));\n  // }, [qualityItems]);\n\n  return (\n    <>\n      <Suspense fallback={<Loading loading={true} />}>\n        <Formik\n          initialValues={{\n            CustomerDetails: null,\n            ProductDetails: null,\n\n            // Add other initial values if needed\n          }}\n          validationSchema={validationSchema}\n          onSubmit={(values, { setSubmitting }) => {\n            // Handle form submission\n            console.log(values);\n            setSubmitting(false);\n          }}\n        >\n          {({ values, touched, errors, setFieldValue, isSubmitting }) => {\n            console.log(\"values\");\n            return (\n              <Form key=\"\">\n                <FormContainer key=\"\">\n                  <div className=\"grid grid-cols-1 lg:grid-cols-1 gap-4\">\n                    <Card className=\"bg-yellow-50 h-max\" bodyClass=\"pb-0\">\n                      <div className=\"flex justify-between\">\n                        <span>\n                          <h5 className=\"font-semibold text-gray-700\">\n                            Customer and Product Information\n                          </h5>\n                        </span>\n                      </div>\n                      <div className=\"grid grid-cols-3 gap-3\">\n                        <CustomerInformation\n                          touched={touched?.CustomerDetails}\n                          errors={errors?.CustomerDetails}\n                          values={values?.CustomerDetails}\n                          customers={customers}\n                          setFieldValue={setFieldValue}\n                        />\n                        <ProductInformation\n                          touched={touched?.ProductDetails}\n                          errors={errors?.ProductDetails}\n                          values={values?.ProductDetails}\n                          setFieldValue={setFieldValue}\n                          products={products}\n                        />\n\n                        <div className=\"flex flex-col justify-center\">\n                          <label\n                            htmlFor=\"total-quantity\"\n                            className=\"text-gray-700 text-sm font-medium mb-2\"\n                            style={{ marginTop: \"-15px\" }}\n                          >\n                            Total Qty\n                          </label>\n                          <Input\n                            id=\"total-quantity\"\n                            type=\"number\"\n                            value={qualityItems.reduce(\n                              (sum, item) => sum + item.quantity,\n                              0\n                            )}\n                            inputProps={{ readOnly: true }}\n                            style={{\n                              width: \"100%\",\n                              fontSize: \"0.95rem\",\n                            }}\n                            className=\"text-gray-600\"\n                            disableUnderline\n                            readOnly\n                          />\n                        </div>\n                      </div>\n                    </Card>\n\n                    <Card>\n                      <div className=\"flex justify-end\">\n                        <Button\n                          type=\"button\"\n                          variant=\"solid\"\n                          // color=\"pink-500\n                          className=\"bg-pink-500 text-white py-5 text-base mb-4\"\n                          onClick={() => setQualityDialogOpen(true)}\n                        >\n                          Add Item\n                        </Button>\n                      </div>\n                      <QualityItemDialog\n                        isOpen={qualityDialogOpen}\n                        onClose={() => setQualityDialogOpen(false)}\n                        data={dummyData}\n                        onSubmit={handleAddItem}\n                      />\n\n                      <ItemTable\n                        initialData={qualityItems}\n                        setQualityItems={setQualityItems}\n                      />\n                    </Card>\n                  </div>\n                </FormContainer>\n              </Form>\n            );\n          }}\n        </Formik>\n      </Suspense>\n    </>\n  );\n};\n\nexport default QualityControl;\n","import ApiService from \"../../ApiService\";\n\nexport async function apiGetCustomerStatisticData() {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/statistic\",\n    method: \"get\",\n  });\n}\n\n// export async function apiDeleteCustomer(data) {\n//   return ApiService.fetchData({\n//     url: \"v1/web/company/customer/delete\",\n//     method: \"delete\",\n//     data,\n//   });\n// }\n\nexport async function apiUpdateCustomerDetails(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/update\",\n    method: \"put\",\n    data,\n  });\n}\n\nexport async function apiGetAllCustomers(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/select\",\n    method: \"get\",\n  });\n}\n\nexport async function apiPostRegisterNewCustomer(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/register\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiUpdateCustomer(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/update/id\",\n    method: \"put\",\n    data,\n  });\n}\nexport async function apiGetCustomersWithPagination(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetCustomerDetailsByCustomerId(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/details/id\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetAllCustomersOption() {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/option\",\n    method: \"get\",\n  });\n}\n\nexport async function apiDeleteCustomer(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/delete/id\",\n    method: \"delete\",\n    data,\n  });\n}\n"],"names":["getQualityControl","createAsyncThunk","async","response","data","ApiService","fetchData","url","method","apiGetQualityControl","error","getAllCustomers","apiGetAllCustomers","getProductsByCustomerId","apiGetProductsByCustomerId","dataSlice","createSlice","name","initialState","customersList","qualityLists","productsList","loading","tableData","total","pageIndex","pageSize","query","customer","filterData","status","attachmentDialog","viewDialog","selectedQuality","reducers","setTableData","state","action","payload","setFilterData","toggleAttachmentDialog","toggleViewDialog","setSelectedQuality","setAllFilterData","customers","extraReducers","fulfilled","_action$payload$data","pending","_action$payload$data2","_action$payload$data3","setSelectedPoList","actions","CustomerInformation","props","errors","values","touched","setFieldValue","dispatch","useDispatch","customerData","useMemo","map","label","value","fetchList","useCallback","customer_id","useEffect","_jsx","FormItem","className","children","invalid","errorMessage","Field","_ref","field","form","Select","options","find","onChange","option","styles","control","provided","minHeight","height","fontFamily","color","fontSize","backgroundColor","isFocused","singleValue","menu","placeholder","memo","ProductInformation","products","console","log","product_id","productData","forEach","item","Products","product","push","productCustomerMap","_item$Customer","customerId","Customer","combineReducers","isOpen","onClose","onSubmit","selectedPONumber","setSelectedPONumber","useState","selectedSerialNumber","setSelectedSerialNumber","serialOptions","setSerialOptions","uniquePONumbers","Set","number","_jsxs","Dialog","open","maxWidth","fullWidth","PaperProps","sx","mt","overflow","DialogTitle","fontWeight","DialogContent","Typography","variant","mb","Box","display","gap","flex","FormControl","InputLabel","handlePONumberChange","event","target","matchingSerials","filter","d","serial_number","padding","MenuProps","style","maxHeight","length","po","MenuItem","disabled","size","handleSerialChange","serial","DialogActions","px","pb","Button","onClick","type","e","preventDefault","selectedItem","itemToAdd","project_number","project_no","po_number","po_serial_number","drawing_number","quantity","err","alert","bgcolor","Tr","Th","Td","THead","TBody","TFoot","Table","ActionColumn","row","qualityItems","setQualityItems","onDelete","updatedData","HiOutlineTrash","ItemTable","_ref2","initialData","columns","header","accessorKey","cell","_row$PoList","original","Po","PoList","_row$PoList2","table","useReactTable","getCoreRowModel","_Fragment","compact","getHeaderGroups","headerGroup","headers","border","textAlign","colSpan","flexRender","column","columnDef","getContext","id","getRowModel","rows","getVisibleCells","injectReducer","qualityReducer","validationSchema","Yup","shape","CustomerDetails","required","ProductDetails","QualityControl","qualityDialogOpen","setQualityDialogOpen","useSelector","_state$quality$data","quality","_state$quality$data2","dummyData","_state$quality$data3","material_grade_id","po_list_id","delivery_date","accept_delivery_date","list_status","product_name","revision_number","material_grade","item_code","DATE","poa","customer_name","material_tc_verify","internal_inspection","ndt_requirement","final_inspection","heat_treatment","other","item_quantity","material_tc_verify_check","internal_inspection_check","ndt_requirement_check","final_inspection_check","heat_treatment_check","other_check","pending_quantity","invoice_date","invoice_no","raw_lead_time","raw_lead_time_type","machine_lead_time","machine_lead_time_type","quality_lead_time","quality_lead_time_type","standard_lead_time","standard_lead_time_type","actual_raw_date","actual_quality_date","actual_machine_date","handleAddItem","newItem","some","_item$Po","_item$PoList","mappedItem","prev","Suspense","fallback","Loading","Formik","initialValues","setSubmitting","isSubmitting","Form","FormContainer","Card","bodyClass","htmlFor","marginTop","Input","reduce","sum","inputProps","readOnly","width","disableUnderline","QualityItemDialog","apiGetCustomerStatisticData","apiUpdateCustomerDetails","apiPostRegisterNewCustomer","apiUpdateCustomer","apiGetCustomersWithPagination","apiGetCustomerDetailsByCustomerId","apiGetAllCustomersOption","apiDeleteCustomer"],"sourceRoot":""}