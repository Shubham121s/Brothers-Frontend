{"version":3,"file":"static/js/2548.e4313f92.chunk.js","mappings":"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","sources":["view/SuperAdmin/Po/EditPo/store/dataSlice.js","view/SuperAdmin/Po/EditPo/store/index.js","view/SuperAdmin/Po/EditPo/index.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { apiGetAllCustomers } from '../../../../../services/SuperAdmin/Customer/CustomerService'\nimport { apiGetAllProductsWithDrawing } from '../../../../../services/SuperAdmin/Product/IndexService'\nimport { apiUpdatePo } from '../../../../../services/SuperAdmin/Po/PoService'\nimport { apiGetPoDetailsByPoId } from '../../../../../services/SuperAdmin/Po/PoService'\nimport {\n  apiGetAllNotesWithOutPagination,\n  apiGetAllConditionWithOutPagination\n} from '../../../../../services/SuperAdmin/Po/Note.Service'\n\nexport const getPoDetailsByPoId = createAsyncThunk(\n  'po/details/data/details',\n  async (data) => {\n    try {\n      const response = await apiGetPoDetailsByPoId(data)\n      return response\n    } catch (error) {\n      return error.response\n    }\n  }\n)\n\nexport const getAllCustomers = createAsyncThunk(\n  'edit/po/data/customer/all',\n  async () => {\n    try {\n      const response = await apiGetAllCustomers()\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nexport const getAllProductsWithDrawing = createAsyncThunk(\n  'edit/po/data/product/all',\n  async () => {\n    try {\n      const response = await apiGetAllProductsWithDrawing()\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nexport const postUpdatePo = createAsyncThunk(\n  'edit/po/data/po/update',\n  async (data) => {\n    try {\n      const response = await apiUpdatePo(data)\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nexport const getAllNotes = createAsyncThunk(\n  'edit/po/data/notes/all',\n  async () => {\n    try {\n      const response = await apiGetAllNotesWithOutPagination()\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nexport const getAllCondition = createAsyncThunk(\n  'edit/po/data/condition/all',\n  async (data) => {\n    try {\n      const response = await apiGetAllConditionWithOutPagination(data)\n      return response\n    } catch (error) {\n      return error?.response\n    }\n  }\n)\n\nconst dataSlice = createSlice({\n  name: 'edit/po/data',\n  initialState: {\n    loading: {\n      getAllCustomers: false,\n      getUniquePoNumber: false,\n      getAllProductsWithDrawing: false,\n      getAllNotes: false,\n      getAllCondition: false,\n      getPoDetailsByPoId: false\n    },\n    customers: [],\n    products: [],\n    poDetails: {}\n  },\n  extraReducers: {\n    [getPoDetailsByPoId.pending]: (state) => {\n      state.loading.getPoDetailsByPoId = true\n    },\n    [getAllCustomers.pending]: (state) => {\n      state.loading.getAllCustomers = true\n    },\n    [getAllProductsWithDrawing.pending]: (state) => {\n      state.loading.getAllProductsWithDrawing = true\n    },\n\n    [getAllNotes.pending]: (state) => {\n      state.loading.getAllNotes = true\n    },\n    [getAllCondition.pending]: (state) => {\n      state.loading.getAllCondition = true\n    },\n\n    [getPoDetailsByPoId.fulfilled]: (state, action) => {\n      state.loading.getPoDetailsByPoId = false\n      state.poDetails = {\n        ...action.payload.data.data,\n        PoLists: action.payload.data.data.PoLists.map((f) => {\n          return { ...f, revision_number: f.Drawing.revision_number }\n        })\n      }\n    },\n    [getAllCustomers.fulfilled]: (state, action) => {\n      state.loading.getAllCustomers = false\n      state.customers = action.payload.data?.data || []\n    },\n    [postUpdatePo.fulfilled]: (state) => {},\n    [getAllProductsWithDrawing.fulfilled]: (state, action) => {\n      state.loading.getAllProductsWithDrawing = false\n      state.products = action.payload.data?.data || []\n    },\n\n    [getAllNotes.fulfilled]: (state, action) => {\n      state.loading.getAllNotes = false\n      state.notes = action.payload.data?.data || []\n    },\n    [getAllCondition.fulfilled]: (state, action) => {\n      state.loading.getAllCondition = false\n      state.condition = action.payload.data?.data || []\n    },\n\n    [getPoDetailsByPoId.rejected]: (state) => {\n      state.loading.getPoDetailsByPoId = false\n    },\n    [getAllCustomers.rejected]: (state) => {\n      state.loading.getAllCustomers = false\n    },\n    [postUpdatePo.rejected]: (state) => {},\n    [getAllProductsWithDrawing.rejected]: (state) => {\n      state.loading.getAllProductsWithDrawing = false\n    },\n    [getAllNotes.rejected]: (state) => {\n      state.loading.getAllNotes = false\n    },\n    [getAllCondition.rejected]: (state) => {\n      state.loading.getAllCondition = false\n    }\n  }\n})\n\nexport default dataSlice.reducer\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport data from \"./dataSlice\";\nimport state from \"./stateSlice\";\nconst editPoReducer = combineReducers({\n  data,\n  state,\n});\n\nexport default editPoReducer;\n","import React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport {\n  getAllCondition,\n  getAllCustomers,\n  getAllNotes,\n  getAllProductsWithDrawing,\n  getPoDetailsByPoId,\n  postUpdatePo,\n} from \"./store/dataSlice\";\nimport PoForm from \"../PoForm\";\nimport editPoReducer from \"./store\";\nimport { injectReducer } from \"../../../../store\";\nimport { Notification, Toast } from \"../../../../components/ui\";\nimport { Loading } from \"../../../../components/shared\";\n\ninjectReducer(\"edit_po\", editPoReducer);\n\nconst EditPO = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const po_id = location.pathname.substring(\n    location.pathname.lastIndexOf(\"/\") + 1\n  );\n\n  const fetch = async () => {\n    dispatch(getAllCustomers());\n    dispatch(getAllProductsWithDrawing());\n    dispatch(getAllCondition({ type: \"po\" }));\n    dispatch(getAllNotes());\n    if (po_id) {\n      await dispatch(getPoDetailsByPoId({ po_id }));\n    }\n  };\n\n  useEffect(() => {\n    fetch();\n  }, [po_id]);\n\n  const initialData = useSelector((state) => state.edit_po.data.poDetails);\n  const customers = useSelector((state) => state.edit_po.data.customers);\n  const products = useSelector((state) => state.edit_po.data.products);\n  const Notes = useSelector((state) => state.edit_po.data.notes);\n  const Condition = useSelector((state) => state.edit_po.data.condition);\n  const loadingStates = useSelector((state) => state.edit_po.data.loading);\n\n  const isLoading = Object.values(loadingStates).some((state) => state);\n\n  const noteOption = useMemo(() => {\n    return Notes?.map((m) => {\n      return { label: m.name, value: { note_id: m.note_id, notes: m.notes } };\n    });\n  }, [Notes]);\n\n  const conditionOption = useMemo(() => {\n    return Condition?.map((m) => {\n      return {\n        label: m.name,\n        value: { condition_id: m.condition_id, condition: m.condition },\n      };\n    });\n  }, [Condition]);\n\n  const updatePo = async (data) => {\n    const action = await dispatch(postUpdatePo(data));\n    return action;\n  };\n\n  const handleFormSubmit = async (values, setSubmitting) => {\n    console.log(\"values from here\", values);\n    setSubmitting(true);\n    const action = await updatePo(values);\n    setSubmitting(false);\n\n    console.log(\"action\", action.payload.data.message);\n    if (action.payload.status === 200) {\n      Toast.push(\n        <Notification title=\"Successfully added\" type=\"success\" duration={2500}>\n          Po successfully added\n        </Notification>,\n        {\n          placement: \"top-center\",\n        }\n      );\n      handleDiscard();\n    } else {\n      Toast.push(\n        <Notification title={\"Error\"} type=\"danger\" duration={2500}>\n          {/* Some Error Occured */}\n          {action.payload.data.message}\n        </Notification>,\n        {\n          placement: \"top-center\",\n        }\n      );\n    }\n  };\n\n  const handleDiscard = () => {\n    navigate(\"/po/list\");\n  };\n\n  return (\n    <Loading loading={isLoading}>\n      <PoForm\n        type=\"edit\"\n        onFormSubmit={handleFormSubmit}\n        onDiscard={handleDiscard}\n        customers={customers}\n        products={products}\n        Notes={noteOption}\n        Condition={conditionOption}\n        initialData={{\n          ...initialData,\n          date: initialData ? new Date(initialData.date) : null,\n          Note: {\n            ...initialData?.Note,\n            notes: initialData?.Note?.notes\n              ? JSON.parse(initialData?.Note?.notes)\n              : [],\n          },\n        }}\n      />\n    </Loading>\n  );\n};\n\nexport default EditPO;\n"],"names":["getPoDetailsByPoId","createAsyncThunk","async","apiGetPoDetailsByPoId","data","error","response","getAllCustomers","apiGetAllCustomers","getAllProductsWithDrawing","apiGetAllProductsWithDrawing","postUpdatePo","apiUpdatePo","getAllNotes","apiGetAllNotesWithOutPagination","getAllCondition","apiGetAllConditionWithOutPagination","createSlice","name","initialState","loading","getUniquePoNumber","customers","products","poDetails","extraReducers","pending","state","fulfilled","action","payload","PoLists","map","f","revision_number","Drawing","_action$payload$data","_action$payload$data2","_action$payload$data3","notes","_action$payload$data4","condition","rejected","combineReducers","injectReducer","editPoReducer","EditPO","_initialData$Note","_initialData$Note2","dispatch","useDispatch","navigate","useNavigate","location","useLocation","po_id","pathname","substring","lastIndexOf","useEffect","type","fetch","initialData","useSelector","edit_po","Notes","Condition","loadingStates","isLoading","Object","values","some","noteOption","useMemo","m","label","value","note_id","conditionOption","condition_id","handleDiscard","_jsx","Loading","children","PoForm","onFormSubmit","setSubmitting","console","log","updatePo","message","status","Toast","push","Notification","title","duration","placement","onDiscard","date","Date","Note","JSON","parse"],"sourceRoot":""}