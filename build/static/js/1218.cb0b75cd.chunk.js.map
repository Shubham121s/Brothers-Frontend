{"version":3,"file":"static/js/1218.cb0b75cd.chunk.js","mappings":"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","sources":["../node_modules/lodash/now.js","../node_modules/lodash/_trimmedEndIndex.js","view/SuperAdmin/Product/Dashboard/store/dataSlice.js","services/SuperAdmin/Product/DashboardService.js","view/SuperAdmin/Product/Dashboard/store/index.js","view/SuperAdmin/Product/Dashboard/components/Statistics.js","view/SuperAdmin/Product/Dashboard/components/SalesReportPerYear.js","view/SuperAdmin/Product/Dashboard/components/SalesReportPerMonth.js","view/SuperAdmin/Product/Dashboard/components/CategoryWiseProductReport.js","view/SuperAdmin/Product/Dashboard/components/TopSellingProduct.js","view/SuperAdmin/Product/Dashboard/components/RevenueGenearteTable.js","view/SuperAdmin/Product/Dashboard/components/RevenueGenerateTableTools.js","view/SuperAdmin/Product/Dashboard/index.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/_baseTrim.js","components/shared/loaders/TableRowSkeleton.js","components/shared/DataTable.js","../node_modules/lodash/debounce.js"],"sourcesContent":["var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport {\n  apiGetProductYearlySalesQuantity,\n  apiGetProductMonthlySalesQuantity,\n  apiGetAllProductsOption,\n  apiGetYears,\n  apiGetAllProductByYearMonth,\n  apiGetProductsByCategory,\n  apiGetTopSellingProduct,\n} from \"../../../../../services/SuperAdmin/Product/DashboardService\";\n\nexport const getProductYearlySalesQuantity = createAsyncThunk(\n  \"super-admin/product/dashboard/data/getProductYearlySalesQuantity\",\n  async (data) => {\n    try {\n      const response = await apiGetProductYearlySalesQuantity(data);\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nexport const getProductMonthlySalesQuantity = createAsyncThunk(\n  \"super-admin/product/dashboard/data/getProductMonthlySalesQuantity\",\n  async (data) => {\n    try {\n      const response = await apiGetProductMonthlySalesQuantity(data);\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nexport const getAllProductOption = createAsyncThunk(\n  \"super-admin/product/dashboard/data/getAllProductOption\",\n  async (data) => {\n    try {\n      const response = await apiGetAllProductsOption();\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nexport const getAllYears = createAsyncThunk(\n  \"super-admin/product/dashboard/data/getYears\",\n  async (data) => {\n    try {\n      const response = await apiGetYears();\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nexport const getAllProductByYearMonth = createAsyncThunk(\n  \"super-admin/product/dashboard/data/getAllProductByYearMonth\",\n  async (data) => {\n    try {\n      const response = await apiGetAllProductByYearMonth(data);\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nexport const getProductsByCategory = createAsyncThunk(\n  \"super-admin/product/dashboard/data/getProductsByCategory\",\n  async (data) => {\n    try {\n      const response = await apiGetProductsByCategory(data);\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nexport const getTopSellingProduct = createAsyncThunk(\n  \"super-admin/product/dashboard/data/getTopSellingProduct\",\n  async (data) => {\n    try {\n      const response = await apiGetTopSellingProduct(data);\n      return response;\n    } catch (error) {\n      return error?.response;\n    }\n  }\n);\n\nexport const initialTableData = {\n  total: 0,\n  pageIndex: 1,\n  pageSize: 10,\n  query: \"\",\n  product_id: \"\",\n  months: \"\",\n  year: \"\",\n};\n\nconst dataSlice = createSlice({\n  name: \"super-admin/dashboard/data\",\n  initialState: {\n    loading: true,\n    productYearlySalesList: [],\n    productMonthlySalesList: [],\n    productList: [],\n    yearsList: [],\n    productByYearMonthList: [],\n    productByCategoryList: [],\n    topSellingProductList: [],\n    tableData: initialTableData,\n  },\n\n  reducers: {\n    setTableData: (state, action) => {\n      state.tableData = action.payload;\n    },\n    setFilterData: (state, action) => {\n      state.filterData = action.payload;\n    },\n  },\n\n  extraReducers: {\n    [getProductYearlySalesQuantity.fulfilled]: (state, action) => {\n      state.productYearlySalesList = action.payload?.data?.data || {};\n      state.loading = false;\n    },\n    [getProductYearlySalesQuantity.pending]: (state) => {\n      state.loading = true;\n    },\n    [getProductMonthlySalesQuantity.fulfilled]: (state, action) => {\n      state.productMonthlySalesList = action.payload?.data?.data || {};\n      state.loading = false;\n    },\n    [getProductMonthlySalesQuantity.pending]: (state) => {\n      state.loading = true;\n    },\n    [getAllProductOption.fulfilled]: (state, action) => {\n      state.productList = action.payload?.data?.data || {};\n      state.loading = false;\n    },\n    [getAllProductOption.pending]: (state) => {\n      state.loading = true;\n    },\n    [getAllYears.fulfilled]: (state, action) => {\n      state.yearsList = action.payload?.data?.data || {};\n      state.loading = false;\n    },\n    [getAllYears.pending]: (state) => {\n      state.loading = true;\n    },\n    [getAllProductByYearMonth.fulfilled]: (state, action) => {\n      state.productByYearMonthList = action.payload?.data?.data || {};\n      state.loading = false;\n    },\n    [getAllProductByYearMonth.pending]: (state) => {\n      state.loading = true;\n    },\n    [getProductsByCategory.fulfilled]: (state, action) => {\n      state.productByCategoryList = action.payload?.data?.data || {};\n      state.loading = false;\n    },\n    [getProductsByCategory.pending]: (state) => {\n      state.loading = true;\n    },\n    [getTopSellingProduct.fulfilled]: (state, action) => {\n      state.topSellingProductList = action.payload?.data?.data || {};\n      state.loading = false;\n    },\n    [getTopSellingProduct.pending]: (state) => {\n      state.loading = true;\n    },\n  },\n});\n\nexport const { setTableData, setFilterData } = dataSlice.actions;\n\nexport default dataSlice.reducer;\n","import ApiService from \"../../ApiService\";\n\nexport async function apiGetProductYearlySalesQuantity(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/product/dashboard/yearly\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetProductMonthlySalesQuantity(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/product/dashboard/month\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetAllProductsOption(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/product/option\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetYears() {\n  return ApiService.fetchData({\n    url: \"v1/web/company/customer/dashboard/years\",\n    method: \"get\",\n  });\n}\n\nexport async function apiGetAllProductByYearMonth(data) {\n  return ApiService.fetchData({\n    url: \"v1/web/company/product/dashboard/dynamic\",\n    method: \"post\",\n    data,\n  });\n}\n\nexport async function apiGetProductsByCategory() {\n  return ApiService.fetchData({\n    url: \"v1/web/company/product/dashboard/by/category\",\n    method: \"get\",\n  });\n}\n\nexport async function apiGetTopSellingProduct() {\n  return ApiService.fetchData({\n    url: \"v1/web/company/product/dashboard/top/selling/product\",\n    method: \"get\",\n  });\n}\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport data from \"./dataSlice\";\n\nconst ProductDashboardReducer = combineReducers({\n  data,\n});\n\nexport default ProductDashboardReducer;\n","import React from \"react\";\nimport { Card } from \"../../../../../components/ui\";\nimport { NumericFormat } from \"react-number-format\";\n\nconst StatisticCard = ({ data = 0, label, valuePrefix, className }) => {\n  return (\n    <Card className={`h-max ${className}`}>\n      <h4 className=\"font-semibold mb-2\">{label}</h4>\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h3 className=\"font-bold\">\n            <NumericFormat\n              displayType=\"text\"\n              value={data}\n              thousandSeparator\n              prefix={valuePrefix}\n            />\n          </h3>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nconst Statistic = ({ data = {} }) => {\n  return (\n    <div className=\"grid grid-cols-4 gap-4 h-max\">\n      <StatisticCard\n        data={data.revenue}\n        // valuePrefix=\"₹\"\n        label=\"Total Products\"\n        className=\"bg-pink-50\"\n      />\n      <StatisticCard\n        data={data.TotalOrders}\n        label=\"Orders\"\n        className=\"bg-emerald-50\"\n      />\n      <StatisticCard\n        data={data.totalInvoice}\n        // valuePrefix=\"₹\"\n        label=\"Invoices\"\n        className=\"bg-rose-50\"\n      />\n\n      <StatisticCard\n        data={data.Purchases}\n        valuePrefix=\"₹\"\n        label=\"Purchases\"\n        className=\"bg-orange-50\"\n      />\n    </div>\n  );\n};\n\nexport default Statistic;\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Button, Select } from \"../../../../../components/ui\";\nimport { Chart } from \"../../../../../components/shared\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProductYearlySalesQuantity } from \"../store/dataSlice\";\n\nconst SalesReportPerYear = ({ className }) => {\n  const dispatch = useDispatch();\n  const [product, setProduct] = useState(null);\n  const [productName, setProductName] = useState(null);\n\n  const yearlySales = useSelector(\n    (state) => state.product_dashboard.data.productYearlySalesList\n  );\n  const products = useSelector(\n    (state) => state.product_dashboard.data.productList\n  );\n\n  // const dummyData = {\n  //   all: {\n  //     year: \"2024\",\n  //     prices: [25000],\n  //   },\n  //   productA: {\n  //     year: \"2024\",\n  //     prices: [10000],\n  //   },\n  //   productB: {\n  //     year: \"2024\",\n  //     prices: [15000],\n  //   },\n  // };\n\n  const data = [\n    {\n      name: \"Quantity\",\n      data: yearlySales.quantity || [],\n    },\n  ];\n\n  useEffect(() => {\n    fetchData();\n  }, [product]);\n\n  const fetchData = async () => {\n    dispatch(getProductYearlySalesQuantity({ product_id: product }));\n  };\n\n  const handleChange = (selected) => {\n    setProduct(selected.value);\n    setProductName(selected.label);\n  };\n\n  return (\n    <>\n      <Card className={className}>\n        <div className=\"grid grid-cols-3 mb-4\">\n          <Select\n            placeholder=\"Select Product\"\n            size=\"sm\"\n            options={products}\n            value={products.find((prod) => prod.value === product)}\n            onChange={handleChange}\n          />\n          <div></div>\n        </div>\n        <Chart\n          options={{\n            dataLabels: {\n              offsetY: -25,\n              style: {\n                fontSize: \"12px\",\n              },\n            },\n            chart: {\n              stacked: true,\n              toolbar: {\n                show: true,\n                tools: {\n                  download: false,\n                  selection: true,\n                  zoom: true,\n                  zoomin: true,\n                  zoomout: true,\n                  pan: true,\n                  reset: true,\n                },\n              },\n              zoom: {\n                enabled: true,\n              },\n            },\n            colors: [\"#1E90FF\"],\n            responsive: [\n              {\n                breakpoint: 480,\n                options: {\n                  legend: {\n                    position: \"bottom\",\n                    offsetX: -10,\n                    offsetY: 0,\n                  },\n                },\n              },\n            ],\n            plotOptions: {\n              bar: {\n                horizontal: false,\n                endingShape: \"round\",\n                borderRadius: 8,\n              },\n            },\n            xaxis: {\n              categories: yearlySales.years || [],\n            },\n            legend: {\n              position: \"right\",\n              offsetY: 40,\n            },\n            fill: {\n              opacity: 1,\n            },\n            title: {\n              text: `${\n                product ? `${productName}` : \"All Products\"\n              } Yearly Sales`,\n              align: \"center\",\n              style: {\n                fontSize: \"20px\",\n                fontWeight: \"normal\",\n                color: \"#263238\",\n              },\n            },\n          }}\n          series={data}\n          type=\"bar\"\n          height={300}\n        />\n      </Card>\n    </>\n  );\n};\n\nexport default SalesReportPerYear;\n","import React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { Card, Select } from \"../../../../../components/ui\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProductMonthlySalesQuantity } from \"../store/dataSlice\";\n\nconst SalesReportPerMonth = ({ className }) => {\n  const dispatch = useDispatch();\n\n  const [product, setProduct] = useState(null);\n  const [productName, setProductName] = useState(null);\n\n  const monthlySales = useSelector(\n    (state) => state.product_dashboard.data.productMonthlySalesList\n  );\n  const products = useSelector(\n    (state) => state.product_dashboard.data.productList\n  );\n\n  const data = [\n    {\n      name: \"Quantity\",\n      data: monthlySales.quantity || [],\n    },\n  ];\n\n  useEffect(() => {\n    fetchData();\n  }, [product]);\n\n  const fetchData = async () => {\n    dispatch(getProductMonthlySalesQuantity({ product_id: product }));\n  };\n\n  const handleChange = (selected) => {\n    setProduct(selected.value);\n    setProductName(selected.label);\n  };\n\n  return (\n    <>\n      <Card className={className}>\n        <div className=\"grid grid-cols-3 mb-4\">\n          <Select\n            placeholder=\"Select customer\"\n            size=\"sm\"\n            options={products}\n            value={products.find((prod) => prod.value === product)}\n            onChange={handleChange}\n          />\n          <div></div>\n        </div>\n        <Chart\n          options={{\n            dataLabels: {\n              offsetY: -25,\n              style: {\n                fontSize: \"12px\",\n              },\n            },\n            chart: {\n              stacked: true,\n              toolbar: {\n                show: true,\n                tools: {\n                  download: false,\n                  selection: true,\n                  zoom: true,\n                  zoomin: true,\n                  zoomout: true,\n                  pan: true,\n                  reset: true,\n                },\n              },\n              zoom: {\n                enabled: true,\n              },\n            },\n            colors: [\"#DA70D6\"],\n            responsive: [\n              {\n                breakpoint: 480,\n                options: {\n                  legend: {\n                    position: \"bottom\",\n                    offsetX: -10,\n                    offsetY: 0,\n                  },\n                },\n              },\n            ],\n            plotOptions: {\n              bar: {\n                horizontal: false,\n                endingShape: \"round\",\n                borderRadius: 8,\n              },\n            },\n            xaxis: {\n              categories: monthlySales.months || [],\n            },\n            legend: {\n              position: \"right\",\n              offsetY: 40,\n            },\n            fill: {\n              opacity: 1,\n            },\n            title: {\n              text: `${\n                product ? `${productName}` : \"All Products\"\n              } Monthly Sales`,\n              align: \"center\",\n              style: {\n                fontSize: \"20px\",\n                fontWeight: \"normal\",\n                color: \"#263238\",\n              },\n            },\n          }}\n          series={data}\n          type=\"bar\"\n          height={300}\n        />\n      </Card>\n    </>\n  );\n};\n\nexport default SalesReportPerMonth;\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Button, Select } from \"../../../../../components/ui\";\n\nimport { Chart } from \"../../../../../components/shared\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProductsByCategory } from \"../store/dataSlice\";\n\nconst CategoryWiseProductReport = ({ className }) => {\n  const dispatch = useDispatch();\n  const categoryData = useSelector(\n    (state) => state.product_dashboard.data.productByCategoryList\n  );\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    dispatch(getProductsByCategory());\n  };\n\n  const data = [\n    {\n      name: \"Quantity\",\n      data: categoryData.QUANTITY || [],\n    },\n  ];\n\n  return (\n    <Card className={className}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h4>Category-Wise Product Report</h4>\n        {/* <Button size=\"sm\">Export Report</Button> */}\n      </div>\n      <Chart\n        options={{\n          dataLabels: {\n            offsetY: -25,\n            style: {\n              fontSize: \"12px\",\n            },\n          },\n          chart: {\n            stacked: true,\n            toolbar: {\n              show: true,\n              tools: {\n                download: false,\n                selection: true,\n                zoom: true,\n                zoomin: true,\n                zoomout: true,\n                pan: true,\n                reset: true,\n              },\n            },\n            zoom: {\n              enabled: true,\n            },\n          },\n          colors: [\"#1E90FF\"],\n          responsive: [\n            {\n              breakpoint: 480,\n              options: {\n                legend: {\n                  position: \"bottom\",\n                  offsetX: -10,\n                  offsetY: 0,\n                },\n              },\n            },\n          ],\n          plotOptions: {\n            bar: {\n              horizontal: false,\n              endingShape: \"round\",\n              borderRadius: 8,\n            },\n          },\n          xaxis: {\n            categories: categoryData.CATEGORY || [],\n          },\n          legend: {\n            position: \"right\",\n            offsetY: 40,\n          },\n          fill: {\n            opacity: 1,\n          },\n        }}\n        series={data}\n        type=\"bar\"\n        height={300}\n      />\n    </Card>\n  );\n};\n\nexport default CategoryWiseProductReport;\n","import React, { useEffect } from \"react\";\nimport DataTable from \"../../../../../components/shared/DataTable\";\nimport { Card, Button } from \"../../../../../components/ui\";\n// import { FaCrown } from \"react-icons/fa6\";\nimport { FaCrown } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getTopSellingProduct } from \"../store/dataSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst TopSellingProduct = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const data = useSelector(\n    (state) => state.product_dashboard.data.topSellingProductList\n  );\n\n  console.log(\"data\", data);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    dispatch(getTopSellingProduct());\n  };\n\n  const NameColumn = ({ value }) => {\n    return <div className=\"items-center uppercase w-42\">{value}</div>;\n  };\n\n  // Table columns\n  // const columns = [\n  //   {\n  //     header: \"Product Name\",\n  //     accessorKey: \"product_name\",\n  //     cell: (props) => {\n  //       const isFirstRow = props.row.index === 0;\n  //       const value = props.row.original.name;\n\n  //       return (\n  //         <div className=\"flex items-center\">\n  //           {isFirstRow && (\n  //             <div className=\"mr-2 text-red-400\">\n  //               <FaCrown />\n  //             </div>\n  //           )}\n  //           <NameColumn value={value} />\n  //         </div>\n  //       );\n  //     },\n  //   },\n  //   {\n  //     header: \"Item Code\",\n  //     accessorKey: \"itemCode\",\n  //     cell: (props) => {\n  //       const value = props.row.original.itemCode;\n  //       return <NameColumn value={value} />;\n  //     },\n  //   },\n  //   {\n  //     header: \"P. Code\",\n  //     accessorKey: \"pCode\",\n  //     cell: (props) => {\n  //       const value = props.row.original.pCode;\n  //       return <NameColumn value={value} />;\n  //     },\n  //   },\n  //   {\n  //     header: \"Pattern No\",\n  //     accessorKey: \"patternNo\",\n  //     cell: (props) => {\n  //       const value = props.row.original.patternNo;\n  //       return <NameColumn value={value} />;\n  //     },\n  //   },\n  //   {\n  //     header: \"Category\",\n  //     accessorKey: \"category\",\n  //     cell: (props) => {\n  //       const value = props.row.original.category;\n  //       return <NameColumn value={value} />;\n  //     },\n  //   },\n  //   {\n  //     header: \"Mat. Grd. No\",\n  //     accessorKey: \"matGrdNo\",\n  //     cell: (props) => {\n  //       const value = props.row.original.matGrdNo;\n  //       return <NameColumn value={value} />;\n  //     },\n  //   },\n  //   {\n  //     header: \"HSN Code\",\n  //     accessorKey: \"hsnCode\",\n  //     cell: (props) => {\n  //       const value = props.row.original.hsnCode;\n  //       return <NameColumn value={value} />;\n  //     },\n  //   },\n  //   {\n  //     header: \"SLT\",\n  //     accessorKey: \"slt\",\n  //     cell: (props) => {\n  //       const value = props.row.original.slt;\n  //       return <NameColumn value={value} />;\n  //     },\n  //   },\n  // ];\n  const columns = [\n    {\n      header: \"Product Name\",\n      accessorKey: \"product_name\",\n      cell: (props) => {\n        const isFirstRow = props.row.index === 0;\n        const value = props.row.original.product_name;\n\n        return (\n          <div className=\"flex items-center\">\n            {isFirstRow && (\n              <div className=\"mr-2 text-red-400\">\n                <FaCrown />\n              </div>\n            )}\n            <NameColumn value={value} />\n          </div>\n        );\n      },\n    },\n    {\n      header: \"Quantity\",\n      accessorKey: \"Quantity\",\n    },\n  ];\n\n  return (\n    <Card>\n      <div className=\"flex justify-between\">\n        <h4 className=\"mb-4\">Top Selling Products</h4>\n        <Button\n          className=\"mb-6 text-sm text-gray-400\"\n          onClick={() => {\n            navigate(\"/product/new\");\n          }}\n        >\n          New Product\n        </Button>\n      </div>\n      <DataTable\n        columns={columns}\n        data={data}\n        loading={false}\n        selectable={false}\n      />\n    </Card>\n  );\n};\n\nexport default TopSellingProduct;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DataTable from \"../../../../../components/shared/DataTable\";\nimport {\n  getAllProductByYearMonth,\n  getAllProductOption,\n  setTableData,\n  getAllYears,\n} from \"../store/dataSlice\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nconst RevenueGenerate = () => {\n  const dispatch = useDispatch();\n  const data = useSelector(\n    (state) => state.product_dashboard.data.productByYearMonthList\n  );\n\n  const loading = useSelector((state) => state.product_dashboard.data.loading);\n  // const { type } = useSelector(\n  //   (state) => state.customer_dashboard.data.filterData\n  // );\n\n  const { pageIndex, pageSize, sort, query, total, product_id, year, months } =\n    useSelector((state) => state.product_dashboard.data.tableData);\n\n  const fetchData = useCallback(() => {\n    dispatch(\n      getAllProductByYearMonth({\n        pageIndex,\n        pageSize,\n        product_id,\n        year,\n        months,\n      })\n    );\n    dispatch(getAllProductOption());\n    dispatch(getAllYears());\n  }, [pageIndex, pageSize, dispatch, product_id, year, months]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData, pageIndex, pageSize, product_id, year, months]);\n\n  const tableData = useMemo(\n    () => ({ pageIndex, pageSize, product_id, year, months }),\n    [pageIndex, pageSize, total, product_id, year, months]\n  );\n\n  const onPaginationChange = (page) => {\n    const newTableData = cloneDeep(tableData);\n    newTableData.pageIndex = page;\n    dispatch(setTableData(newTableData));\n  };\n\n  const onSelectChange = (value) => {\n    const newTableData = cloneDeep(tableData);\n    newTableData.pageSize = Number(value);\n    newTableData.pageIndex = 1;\n    dispatch(setTableData(newTableData));\n  };\n\n  const columns = [\n    {\n      header: \"Product Name\",\n      accessorKey: \"product_name\",\n      cell: (props) => {\n        const row = props.row.original;\n        return <span>{row.product_name}</span>;\n      },\n    },\n    {\n      header: \"Quantity\",\n      accessorKey: \"TOTALQUANTITY\",\n      cell: (props) => {\n        const row = props.row.original;\n        return <span>{row.TOTALQUANTITY}</span>;\n      },\n    },\n  ];\n\n  return (\n    <>\n      <DataTable\n        columns={columns}\n        data={data}\n        loading={loading}\n        pagingData={{ pageIndex, pageSize, query, total }}\n        onPaginationChange={onPaginationChange}\n        onSelectChange={onSelectChange}\n      />\n    </>\n  );\n};\n\nexport default RevenueGenerate;\n","import React, { useState } from \"react\";\nimport debounce from \"lodash/debounce\";\nimport { HiOutlineFilter } from \"react-icons/hi\";\n// import { MONTHS } from \"../../../../../\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport { getAllProductByYearMonth, setTableData } from \"../store/dataSlice\";\nimport { Button, Card, Select } from \"../../../../../components/ui\";\n\nconst RevenueGenerateTableTools = () => {\n  const [open, setOpen] = useState(false);\n  const [productValues, setProductValues] = useState([]);\n  const [yearValues, setyearValues] = useState([]);\n  const [monthValues, setMonthValues] = useState([]);\n  const dispatch = useDispatch();\n\n  console.log(\"productValues\", productValues);\n  const tableData = useSelector(\n    (state) => state.product_dashboard.data.tableData\n  );\n  const productOption = useSelector(\n    (state) => state.product_dashboard.data.productList\n  );\n\n  const yearOption = useSelector(\n    (state) => state.product_dashboard.data.yearsList\n  );\n\n  console.log(\"year option\", yearOption);\n\n  const tableDatas = useSelector(\n    (state) => state.product_dashboard.data.tableData\n  );\n\n  console.log(\"tabelDatas\", tableDatas);\n\n  const onClearAll = () => {\n    const newTableData = cloneDeep(tableData);\n    newTableData.product_id = \"\";\n    newTableData.year = \"\";\n    newTableData.month = \"\";\n\n    fetchData(newTableData);\n  };\n\n  const debounceFn = debounce((val, type) => handleDebounceFn(val, type), 50);\n\n  function handleDebounceFn(val, type) {\n    const newTableData = cloneDeep(tableData);\n    if (type === \"product\") {\n      setProductValues(val);\n      // let productId = val.map((m) => m.value);\n      newTableData.product_id = val;\n    } else if (type === \"year\") {\n      setyearValues(val);\n      let years = val.map((m) => m.value);\n      newTableData.year = JSON.stringify(years);\n    } else if (type === \"month\") {\n      setMonthValues(val);\n      let months = val.map((m) => m.value);\n      newTableData.months = JSON.stringify(months);\n    }\n\n    // newTableData.pageIndex = 1;\n    // if (val) {\n    //   fetchData(newTableData);\n    // } else {\n    //   fetchData(newTableData);\n    // }\n    dispatch(setTableData(newTableData));\n  }\n\n  const fetchData = (data) => {\n    dispatch(setTableData(data));\n    dispatch(getAllProductByYearMonth({ ...data }));\n  };\n\n  const onEdit = (e, type) => {\n    if (type === \"product\") {\n      debounceFn(e.value, type);\n    } else if (type === \"year\") {\n      debounceFn(e, type);\n    } else if (type === \"month\") {\n      debounceFn(e, type);\n    }\n  };\n  const MONTHS = [\n    { label: \"JAN\", value: 1 },\n    { label: \"FEB\", value: 2 },\n    { label: \"MAR\", value: 3 },\n    { label: \"APR\", value: 4 },\n    { label: \"MAY\", value: 5 },\n    { label: \"JUN\", value: 6 },\n    { label: \"JUL\", value: 7 },\n    { label: \"AUG\", value: 8 },\n    { label: \"SEP\", value: 9 },\n    { label: \"OCT\", value: 10 },\n    { label: \"NOV\", value: 11 },\n    { label: \"DEC\", value: 12 },\n  ];\n\n  return (\n    <>\n      <div className=\"flex items-center justify-between gap-2 mb-4\">\n        {/* <h3>Master Product Planner</h3> */}\n        <div></div>\n        <div className=\"flex gap-4\">\n          <Button\n            size=\"sm\"\n            icon={<HiOutlineFilter />}\n            onClick={() => setOpen(() => !open)}\n          >\n            Filter\n          </Button>\n          <Button size=\"sm\" onClick={onClearAll}>\n            Clear All\n          </Button>\n        </div>\n      </div>\n      {open && (\n        <Card className=\"mb-4\">\n          <div className=\"grid grid-cols-5 gap-2\">\n            <Select\n              isMulti\n              placeholder=\"Select Year\"\n              size=\"sm\"\n              options={yearOption}\n              value={yearValues}\n              onChange={(e) => onEdit(e, \"year\")}\n            />\n            <Select\n              isMulti\n              placeholder=\"Select Months\"\n              size=\"sm\"\n              options={MONTHS}\n              value={monthValues}\n              onChange={(e) => onEdit(e, \"month\")}\n            />\n            <Select\n              placeholder=\"Select Product\"\n              size=\"sm\"\n              options={productOption}\n              value={productValues}\n              onChange={(e) => onEdit(e, \"product\")}\n            />\n          </div>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default RevenueGenerateTableTools;\n","import React, { useEffect } from \"react\";\nimport { Loading } from \"../../../../components/shared\";\n// import { useDispatch, useSelector } from \"react-redux\";\nimport { injectReducer } from \"../../../../store\";\nimport ProductDashboardReducer from \"./store\";\nimport Statistic from \"./components/Statistics\";\n\nimport { Card } from \"../../../../components/ui\";\nimport SalesReportPerYear from \"./components/SalesReportPerYear\";\nimport SalesReportPerMonth from \"./components/SalesReportPerMonth\";\nimport CategoryWiseProductReport from \"./components/CategoryWiseProductReport\";\nimport TopSellingProduct from \"./components/TopSellingProduct\";\nimport { useDispatch } from \"react-redux\";\nimport { getAllProductOption } from \"./store/dataSlice\";\nimport RevenueGenerate from \"./components/RevenueGenearteTable\";\nimport RevenueGenerateTableTools from \"./components/RevenueGenerateTableTools\";\n\ninjectReducer(\"product_dashboard\", ProductDashboardReducer);\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllProductOption());\n  }, [dispatch]);\n\n  return (\n    <Loading loading={false}>\n      {/* <div className=\"grid grid-cols-2 gap-4 mb-4\"> */}\n      {/* <Card> */}\n      <Statistic />\n      {/* </Card> */}\n      <div className=\"grid grid-cols-2 gap-4 mb-4 mt-6\">\n        <SalesReportPerYear />\n        <SalesReportPerMonth />\n      </div>\n      <div className=\"grid grid-cols-2 gap-4 mb-4 mt-6\">\n        <CategoryWiseProductReport />\n        <TopSellingProduct />\n      </div>\n      {/* </div> */}\n\n      <Card>\n        <RevenueGenerateTableTools />\n        <RevenueGenerate />\n      </Card>\n    </Loading>\n  );\n};\n\nexport default Dashboard;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Table, Skeleton } from '../../../components/ui'\n\nconst { Tr, Td, TBody } = Table\n\nconst TableRowSkeleton = (props) => {\n    const { columns, rows, avatarInColumns, avatarProps } = props\n\n    return (\n        <TBody>\n            {Array.from(new Array(rows), (_, i) => i + 0).map((row) => (\n                <Tr key={`row-${row}`}>\n                    {Array.from(new Array(columns), (_, i) => i + 0).map(\n                        (col) => (\n                            <Td key={`col-${col}`}>\n                                <div className=\"flex flex-auto items-center gap-2\">\n                                    {avatarInColumns.includes(col) && (\n                                        <div>\n                                            <Skeleton\n                                                variant=\"circle\"\n                                                {...avatarProps}\n                                            />\n                                        </div>\n                                    )}\n                                    <Skeleton />\n                                </div>\n                            </Td>\n                        )\n                    )}\n                </Tr>\n            ))}\n        </TBody>\n    )\n}\n\nTableRowSkeleton.propTypes = {\n    columns: PropTypes.number,\n    rows: PropTypes.number,\n    avatarInColumns: PropTypes.arrayOf(PropTypes.number),\n}\n\nTableRowSkeleton.defaultProps = {\n    columns: 1,\n    rows: 10,\n    avatarInColumns: [],\n}\n\nexport default TableRowSkeleton\n","import React, {\n  forwardRef,\n  useMemo,\n  useRef,\n  useEffect,\n  useState,\n  useImperativeHandle,\n} from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport {\n  Table,\n  Pagination,\n  Select,\n  Checkbox,\n  Alert,\n} from \"../../components/ui\";\nimport TableRowSkeleton from \"./loaders/TableRowSkeleton\";\nimport Loading from \"./Loading\";\nimport {\n  useReactTable,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  flexRender,\n} from \"@tanstack/react-table\";\n\nconst { Tr, Th, Td, THead, TBody } = Table;\n\nconst IndeterminateCheckbox = (props) => {\n  const {\n    indeterminate,\n    onChange,\n    onCheckBoxChange,\n    onIndeterminateCheckBoxChange,\n    ...rest\n  } = props;\n\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if (typeof indeterminate === \"boolean\") {\n      ref.current.indeterminate = !rest.checked && indeterminate;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ref, indeterminate]);\n\n  const handleChange = (e) => {\n    onChange(e);\n    onCheckBoxChange?.(e);\n    onIndeterminateCheckBoxChange?.(e);\n  };\n\n  return (\n    <Checkbox\n      className=\"mb-0\"\n      ref={ref}\n      onChange={(_, e) => handleChange(e)}\n      {...rest}\n    />\n  );\n};\n\nconst DataTable = forwardRef((props, ref) => {\n  const {\n    skeletonAvatarColumns,\n    columns: columnsProp,\n    data,\n    loading,\n    onCheckBoxChange,\n    onIndeterminateCheckBoxChange,\n    onPaginationChange,\n    onSelectChange,\n    onSort,\n    pageSizes,\n    selectable,\n    skeletonAvatarProps,\n    pagingData,\n    tableWidth = \"100%\",\n  } = props;\n\n  const { pageSize, pageIndex, total } = pagingData;\n\n  const [sorting, setSorting] = useState(null);\n\n  const pageSizeOption = useMemo(\n    () =>\n      pageSizes.map((number) => ({\n        value: number,\n        label: `${number} / page`,\n      })),\n    [pageSizes]\n  );\n\n  const handleCheckBoxChange = (checked, row) => {\n    if (!loading) {\n      onCheckBoxChange?.(checked, row);\n    }\n  };\n\n  const handleIndeterminateCheckBoxChange = (checked, rows) => {\n    if (!loading) {\n      onIndeterminateCheckBoxChange?.(checked, rows);\n    }\n  };\n\n  const handlePaginationChange = (page) => {\n    if (!loading) {\n      onPaginationChange?.(page);\n    }\n  };\n\n  const handleSelectChange = (value) => {\n    if (!loading) {\n      onSelectChange?.(Number(value));\n    }\n  };\n\n  useEffect(() => {\n    if (Array.isArray(sorting)) {\n      const sortOrder =\n        sorting.length > 0 ? (sorting[0].desc ? \"desc\" : \"asc\") : \"\";\n      const id = sorting.length > 0 ? sorting[0].id : \"\";\n      onSort?.({ order: sortOrder, key: id });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sorting]);\n\n  const hasOldColumnMetaKey = columnsProp.some(\n    (col) => col.Header || col.accessor || col.Cell\n  );\n\n  const finalColumns = useMemo(() => {\n    const columns = columnsProp.map((col) => ({\n      ...col,\n      size: col.size || undefined,\n      minSize: col.minSize || 100,\n      maxSize: col.maxSize || 300,\n    }));\n\n    if (selectable) {\n      return [\n        {\n          id: \"select\",\n          header: ({ table }) => (\n            <IndeterminateCheckbox\n              checked={table.getIsAllRowsSelected()}\n              indeterminate={table.getIsSomeRowsSelected()}\n              onChange={table.getToggleAllRowsSelectedHandler()}\n              onIndeterminateCheckBoxChange={(e) => {\n                handleIndeterminateCheckBoxChange(\n                  e.target.checked,\n                  table.getRowModel().rows\n                );\n              }}\n            />\n          ),\n          cell: ({ row }) => (\n            <IndeterminateCheckbox\n              checked={row.getIsSelected()}\n              disabled={!row.getCanSelect()}\n              indeterminate={row.getIsSomeSelected()}\n              onChange={row.getToggleSelectedHandler()}\n              onCheckBoxChange={(e) =>\n                handleCheckBoxChange(e.target.checked, row.original)\n              }\n            />\n          ),\n          size: 50,\n          minSize: 50,\n          maxSize: 50,\n        },\n        ...columns,\n      ];\n    }\n    return columns;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [columnsProp, selectable]);\n\n  const table = useReactTable({\n    data,\n    columns: hasOldColumnMetaKey ? [] : finalColumns,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    manualPagination: true,\n    manualSorting: true,\n    onSortingChange: setSorting,\n    state: {\n      sorting,\n    },\n    columnResizeMode: \"onChange\",\n  });\n\n  const resetSorting = () => {\n    table.resetSorting();\n  };\n\n  const resetSelected = () => {\n    table.toggleAllRowsSelected(false);\n  };\n\n  useImperativeHandle(ref, () => ({\n    resetSorting,\n    resetSelected,\n  }));\n\n  if (hasOldColumnMetaKey) {\n    const message =\n      \"You are using old react-table v7 column config, please use v8 column config instead, refer to our demo or https://tanstack.com/table/v8\";\n\n    if (process.env.NODE_ENV === \"development\") {\n      console.warn(message);\n    }\n\n    return <Alert>{message}</Alert>;\n  }\n\n  return (\n    <Loading loading={loading && data.length !== 0} type=\"cover\">\n      <div style={{ width: tableWidth, overflowX: \"auto\" }}>\n        <Table style={{ width: \"100%\", tableLayout: \"fixed\" }}>\n          <THead>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <Tr key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <Th\n                      key={header.id}\n                      colSpan={header.colSpan}\n                      style={{ width: `${header.column.getSize()}px` }}\n                    >\n                      {header.isPlaceholder ? null : (\n                        <div\n                          className={classNames(\n                            // header.column.getCanSort() && 'cursor-pointer select-none point',\n                            loading && \"pointer-events-none\"\n                          )}\n                          // onClick={header.column.getToggleSortingHandler()}\n                        >\n                          {flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                          {/* {header.column.getCanSort() && <Sorter sort={header.column.getIsSorted()} />} */}\n                        </div>\n                      )}\n                    </Th>\n                  );\n                })}\n              </Tr>\n            ))}\n          </THead>\n          {loading && data.length === 0 ? (\n            <TableRowSkeleton\n              columns={finalColumns.length}\n              rows={pagingData.pageSize}\n              avatarInColumns={skeletonAvatarColumns}\n              avatarProps={skeletonAvatarProps}\n            />\n          ) : (\n            <TBody>\n              {table\n                .getRowModel()\n                .rows.slice(0, pageSize)\n                .map((row) => {\n                  return (\n                    <Tr key={row.id}>\n                      {row.getVisibleCells().map((cell) => {\n                        return (\n                          <Td\n                            key={cell.id}\n                            style={{ width: `${cell.column.getSize()}px` }}\n                          >\n                            {flexRender(\n                              cell.column.columnDef.cell,\n                              cell.getContext()\n                            )}\n                          </Td>\n                        );\n                      })}\n                    </Tr>\n                  );\n                })}\n            </TBody>\n          )}\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-between mt-4\">\n        <Pagination\n          pageSize={pageSize}\n          currentPage={pageIndex}\n          total={total}\n          onChange={handlePaginationChange}\n        />\n        <div style={{ minWidth: 130 }}>\n          <Select\n            size=\"sm\"\n            menuPlacement=\"top\"\n            isSearchable={false}\n            value={pageSizeOption.filter((option) => option.value === pageSize)}\n            options={pageSizeOption}\n            onChange={(option) => handleSelectChange(option.value)}\n          />\n        </div>\n      </div>\n    </Loading>\n  );\n});\n\nDataTable.propTypes = {\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  loading: PropTypes.bool,\n  onCheckBoxChange: PropTypes.func,\n  onIndeterminateCheckBoxChange: PropTypes.func,\n  onPaginationChange: PropTypes.func,\n  onSelectChange: PropTypes.func,\n  onSort: PropTypes.func,\n  pageSizes: PropTypes.arrayOf(PropTypes.number),\n  selectable: PropTypes.bool,\n  skeletonAvatarColumns: PropTypes.arrayOf(PropTypes.number),\n  skeletonAvatarProps: PropTypes.object,\n  pagingData: PropTypes.shape({\n    total: PropTypes.number,\n    pageIndex: PropTypes.number,\n    pageSize: PropTypes.number,\n  }),\n};\n\nDataTable.defaultProps = {\n  pageSizes: [10, 25, 50, 100],\n  pagingData: {\n    total: 0,\n    pageIndex: 1,\n    pageSize: 10,\n  },\n  data: [],\n  columns: [],\n  selectable: false,\n  loading: false,\n};\n\nexport default DataTable;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n"],"names":["root","require","module","exports","Date","now","reWhitespace","string","index","length","test","charAt","getProductYearlySalesQuantity","createAsyncThunk","async","response","data","ApiService","fetchData","url","method","apiGetProductYearlySalesQuantity","error","getProductMonthlySalesQuantity","apiGetProductMonthlySalesQuantity","getAllProductOption","apiGetAllProductsOption","getAllYears","apiGetYears","getAllProductByYearMonth","apiGetAllProductByYearMonth","getProductsByCategory","apiGetProductsByCategory","getTopSellingProduct","apiGetTopSellingProduct","dataSlice","createSlice","name","initialState","loading","productYearlySalesList","productMonthlySalesList","productList","yearsList","productByYearMonthList","productByCategoryList","topSellingProductList","tableData","total","pageIndex","pageSize","query","product_id","months","year","reducers","setTableData","state","action","payload","setFilterData","filterData","extraReducers","fulfilled","_action$payload","_action$payload$data","pending","_action$payload2","_action$payload2$data","_action$payload3","_action$payload3$data","_action$payload4","_action$payload4$data","_action$payload5","_action$payload5$data","_action$payload6","_action$payload6$data","_action$payload7","_action$payload7$data","actions","combineReducers","StatisticCard","_ref","label","valuePrefix","className","_jsxs","Card","children","_jsx","NumericFormat","displayType","value","thousandSeparator","prefix","_ref2","revenue","TotalOrders","totalInvoice","Purchases","dispatch","useDispatch","product","setProduct","useState","productName","setProductName","yearlySales","useSelector","product_dashboard","products","quantity","useEffect","_Fragment","Select","placeholder","size","options","find","prod","onChange","selected","Chart","dataLabels","offsetY","style","fontSize","chart","stacked","toolbar","show","tools","download","selection","zoom","zoomin","zoomout","pan","reset","enabled","colors","responsive","breakpoint","legend","position","offsetX","plotOptions","bar","horizontal","endingShape","borderRadius","xaxis","categories","years","fill","opacity","title","text","align","fontWeight","color","series","type","height","monthlySales","categoryData","QUANTITY","CATEGORY","TopSellingProduct","navigate","useNavigate","console","log","NameColumn","columns","header","accessorKey","cell","props","isFirstRow","row","original","product_name","FaCrown","Button","onClick","DataTable","selectable","RevenueGenerate","sort","useCallback","useMemo","TOTALQUANTITY","pagingData","onPaginationChange","page","newTableData","cloneDeep","onSelectChange","Number","RevenueGenerateTableTools","open","setOpen","productValues","setProductValues","yearValues","setyearValues","monthValues","setMonthValues","productOption","yearOption","tableDatas","debounceFn","debounce","val","map","m","JSON","stringify","handleDebounceFn","onEdit","e","icon","HiOutlineFilter","onClearAll","month","isMulti","injectReducer","ProductDashboardReducer","Dashboard","Loading","Statistic","SalesReportPerYear","SalesReportPerMonth","CategoryWiseProductReport","baseTrim","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","slice","trimmedEndIndex","reTrimStart","replace","Tr","Td","TBody","Table","TableRowSkeleton","rows","avatarInColumns","avatarProps","Array","from","_","i","col","includes","Skeleton","variant","defaultProps","Th","THead","IndeterminateCheckbox","indeterminate","onCheckBoxChange","onIndeterminateCheckBoxChange","rest","ref","useRef","current","checked","Checkbox","handleChange","forwardRef","skeletonAvatarColumns","columnsProp","onSort","pageSizes","skeletonAvatarProps","tableWidth","sorting","setSorting","pageSizeOption","number","isArray","sortOrder","desc","id","order","key","hasOldColumnMetaKey","some","Header","accessor","Cell","finalColumns","undefined","minSize","maxSize","table","getIsAllRowsSelected","getIsSomeRowsSelected","getToggleAllRowsSelectedHandler","handleIndeterminateCheckBoxChange","target","getRowModel","getIsSelected","disabled","getCanSelect","getIsSomeSelected","getToggleSelectedHandler","handleCheckBoxChange","useReactTable","getCoreRowModel","getFilteredRowModel","getPaginationRowModel","getSortedRowModel","manualPagination","manualSorting","onSortingChange","columnResizeMode","resetSorting","resetSelected","toggleAllRowsSelected","useImperativeHandle","message","Alert","width","overflowX","tableLayout","getHeaderGroups","headerGroup","headers","colSpan","column","getSize","isPlaceholder","classNames","flexRender","columnDef","getContext","getVisibleCells","Pagination","currentPage","minWidth","menuPlacement","isSearchable","filter","option","handleSelectChange","toNumber","nativeMax","Math","max","nativeMin","min","func","wait","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","clearTimeout","cancel","flush"],"sourceRoot":""}