{"version":3,"file":"static/js/8307.a66d6c28.chunk.js","mappings":"8LAkBA,QAhBA,WAA6C,IAAlBA,EAAQC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAClC,MAAOG,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IAYvC,OAVAC,EAAAA,EAAAA,WAAU,KACN,GAAIH,EAAS,CACT,IAAII,EAAUC,WAAW,IAAMJ,EAAW,IAAKL,GAC/C,MAAO,KACHU,aAAaF,GAErB,GAED,CAACJ,IAEG,CAACA,EAASC,EACrB,E,gDCFA,MAAMM,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaG,SAAS,2BAC7BC,SAAUJ,EAAAA,KAAaG,SAAS,gCA+FlC,EA5FoBE,IAClB,MAAM,cACJC,GAAgB,EAAK,UACrBC,EAAS,kBACTC,EAAoB,mBAClBH,GAEGb,EAASC,GAAcgB,KAExB,OAAEC,IAAWC,EAAAA,EAAAA,KAcnB,OACEC,EAAAA,EAAAA,MAAA,OAAKL,UAAWA,EAAUM,SAAA,CACvBrB,IACCsB,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAACR,UAAU,OAAOS,KAAK,SAASC,UAAQ,EAAAJ,SAC3CrB,KAGLsB,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CACLC,cAAe,CACbjB,MAAO,GACPE,SAAU,IAEZL,iBAAkBA,EAClBqB,SAAUA,CAACC,EAAMC,KAAyB,IAAvB,cAAEC,GAAeD,EAC7BhB,EAGHiB,GAAc,GA7BPC,OAAOH,EAAQE,KAC9BA,GAAc,GAEd,MAAME,QAAef,EAAOW,GAEN,WAAlBI,EAAOC,QACTjC,EAAWgC,EAAOjC,SAGpB+B,GAAc,IAkBNI,CAASN,EAAQE,IAInBV,SAEDe,IAAA,IAAC,QAAEC,EAAO,OAAEC,EAAM,aAAEC,EAAY,OAAEV,GAAQO,EAAA,OACzCd,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CAAAnB,UACHD,EAAAA,EAAAA,MAACqB,EAAAA,GAAa,CAAApB,SAAA,EACZC,EAAAA,EAAAA,KAACoB,EAAAA,GAAQ,CACPC,MAAM,QACNC,QAASN,EAAO5B,OAAS2B,EAAQ3B,MACjCmC,aAAcP,EAAO5B,MAAMW,UAE3BC,EAAAA,EAAAA,KAACwB,EAAAA,GAAK,CACJtB,KAAK,OACLuB,aAAa,MACbC,KAAK,QACLC,YAAY,QACZC,UAAWC,EAAAA,QAGf7B,EAAAA,EAAAA,KAACoB,EAAAA,GAAQ,CACP3B,UAAU,OACV4B,MAAM,WACNC,QAASN,EAAO1B,UAAYyB,EAAQzB,SACpCiC,aAAcP,EAAO1B,SAASS,UAE9BC,EAAAA,EAAAA,KAACwB,EAAAA,GAAK,CACJC,aAAa,MACbC,KAAK,WACLC,YAAY,WACZC,UAAWE,EAAAA,QAGf9B,EAAAA,EAAAA,KAAA,OAAKP,UAAU,wBAAuBM,UACpCC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAU,CAACC,GAAItC,EAAkBK,SAAC,wBAErCC,EAAAA,EAAAA,KAACiC,EAAAA,GAAM,CACLC,OAAK,EACLC,QAASlB,EACTmB,QAAQ,QACRlC,KAAK,SAAQH,SAEZkB,EAAe,gBAAkB,uB","sources":["utils/hooks/useTimeOutMessage.js","view/auth/signIn/SignInForm.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nfunction useTimeOutMessage(interval = 3000) {\n    const [message, setMessage] = useState('')\n\n    useEffect(() => {\n        if (message) {\n            let timeout = setTimeout(() => setMessage(''), interval)\n            return () => {\n                clearTimeout(timeout)\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [message])\n\n    return [message, setMessage]\n}\n\nexport default useTimeOutMessage\n","import React from \"react\";\nimport {\n  Input,\n  Button,\n  FormItem,\n  FormContainer,\n  Alert,\n} from \"../../../components/ui\";\nimport { PasswordInput, ActionLink } from \"../../../components/shared\";\nimport useTimeOutMessage from \"../../../utils/hooks/useTimeOutMessage\";\nimport { Field, Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport useAuth from \"../../../utils/hooks/useAuth\";\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required(\"Please enter your email\"),\n  password: Yup.string().required(\"Please enter your password\"),\n});\n\nconst SignInForm = (props) => {\n  const {\n    disableSubmit = false,\n    className,\n    forgotPasswordUrl = \"/reset-password\",\n  } = props;\n\n  const [message, setMessage] = useTimeOutMessage();\n\n  const { signIn } = useAuth();\n\n  const onSignIn = async (values, setSubmitting) => {\n    setSubmitting(true);\n\n    const result = await signIn(values);\n\n    if (result.status === \"failed\") {\n      setMessage(result.message);\n    }\n\n    setSubmitting(false);\n  };\n\n  return (\n    <div className={className}>\n      {message && (\n        <Alert className=\"mb-4\" type=\"danger\" showIcon>\n          {message}\n        </Alert>\n      )}\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          if (!disableSubmit) {\n            onSignIn(values, setSubmitting);\n          } else {\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ touched, errors, isSubmitting, values }) => (\n          <Form>\n            <FormContainer>\n              <FormItem\n                label=\"Email\"\n                invalid={errors.email && touched.email}\n                errorMessage={errors.email}\n              >\n                <Field\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  component={Input}\n                />\n              </FormItem>\n              <FormItem\n                className=\"mb-3\"\n                label=\"Password\"\n                invalid={errors.password && touched.password}\n                errorMessage={errors.password}\n              >\n                <Field\n                  autoComplete=\"off\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  component={PasswordInput}\n                />\n              </FormItem>\n              <div className=\"flex justify-end mb-4\">\n                <ActionLink to={forgotPasswordUrl}>Forgot Password?</ActionLink>\n              </div>\n              <Button\n                block\n                loading={isSubmitting}\n                variant=\"solid\"\n                type=\"submit\"\n              >\n                {isSubmitting ? \"Signing in...\" : \"Sign In\"}\n              </Button>\n            </FormContainer>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SignInForm;\n"],"names":["interval","arguments","length","undefined","message","setMessage","useState","useEffect","timeout","setTimeout","clearTimeout","validationSchema","Yup","shape","email","required","password","props","disableSubmit","className","forgotPasswordUrl","useTimeOutMessage","signIn","useAuth","_jsxs","children","_jsx","Alert","type","showIcon","Formik","initialValues","onSubmit","values","_ref","setSubmitting","async","result","status","onSignIn","_ref2","touched","errors","isSubmitting","Form","FormContainer","FormItem","label","invalid","errorMessage","Field","autoComplete","name","placeholder","component","Input","PasswordInput","ActionLink","to","Button","block","loading","variant"],"sourceRoot":""}